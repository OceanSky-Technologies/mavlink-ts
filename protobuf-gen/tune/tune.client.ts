/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter ts_nocheck,eslint_disable
// @generated from protobuf file "tune/tune.proto" (package "mavsdk.rpc.tune", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TuneService } from "./tune";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { PlayTuneResponse } from "./tune";
import type { PlayTuneRequest } from "./tune";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Enable creating and sending a tune to be played on the system.
 *
 * @generated from protobuf service mavsdk.rpc.tune.TuneService
 */
export interface ITuneServiceClient {
    /**
     * Send a tune to be played by the system.
     *
     * @generated from protobuf rpc: PlayTune(mavsdk.rpc.tune.PlayTuneRequest) returns (mavsdk.rpc.tune.PlayTuneResponse);
     */
    playTune(input: PlayTuneRequest, options?: RpcOptions): UnaryCall<PlayTuneRequest, PlayTuneResponse>;
}
/**
 * Enable creating and sending a tune to be played on the system.
 *
 * @generated from protobuf service mavsdk.rpc.tune.TuneService
 */
export class TuneServiceClient implements ITuneServiceClient, ServiceInfo {
    typeName = TuneService.typeName;
    methods = TuneService.methods;
    options = TuneService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Send a tune to be played by the system.
     *
     * @generated from protobuf rpc: PlayTune(mavsdk.rpc.tune.PlayTuneRequest) returns (mavsdk.rpc.tune.PlayTuneResponse);
     */
    playTune(input: PlayTuneRequest, options?: RpcOptions): UnaryCall<PlayTuneRequest, PlayTuneResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<PlayTuneRequest, PlayTuneResponse>("unary", this._transport, method, opt, input);
    }
}
