/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter ts_nocheck,eslint_disable
// @generated from protobuf file "server_utility/server_utility.proto" (package "mavsdk.rpc.server_utility", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ServerUtilityService } from "./server_utility";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { SendStatusTextResponse } from "./server_utility";
import type { SendStatusTextRequest } from "./server_utility";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 *
 * Utility for onboard MAVSDK instances for common "server" tasks.
 *
 * @generated from protobuf service mavsdk.rpc.server_utility.ServerUtilityService
 */
export interface IServerUtilityServiceClient {
    /**
     * Sends a statustext.
     *
     * @generated from protobuf rpc: SendStatusText(mavsdk.rpc.server_utility.SendStatusTextRequest) returns (mavsdk.rpc.server_utility.SendStatusTextResponse);
     */
    sendStatusText(input: SendStatusTextRequest, options?: RpcOptions): UnaryCall<SendStatusTextRequest, SendStatusTextResponse>;
}
/**
 *
 * Utility for onboard MAVSDK instances for common "server" tasks.
 *
 * @generated from protobuf service mavsdk.rpc.server_utility.ServerUtilityService
 */
export class ServerUtilityServiceClient implements IServerUtilityServiceClient, ServiceInfo {
    typeName = ServerUtilityService.typeName;
    methods = ServerUtilityService.methods;
    options = ServerUtilityService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Sends a statustext.
     *
     * @generated from protobuf rpc: SendStatusText(mavsdk.rpc.server_utility.SendStatusTextRequest) returns (mavsdk.rpc.server_utility.SendStatusTextResponse);
     */
    sendStatusText(input: SendStatusTextRequest, options?: RpcOptions): UnaryCall<SendStatusTextRequest, SendStatusTextResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<SendStatusTextRequest, SendStatusTextResponse>("unary", this._transport, method, opt, input);
    }
}
