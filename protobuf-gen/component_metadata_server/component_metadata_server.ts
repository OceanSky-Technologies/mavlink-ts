/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter ts_nocheck,eslint_disable
// @generated from protobuf file "component_metadata_server/component_metadata_server.proto" (package "mavsdk.rpc.component_metadata_server", syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message mavsdk.rpc.component_metadata_server.SetMetadataRequest
 */
export interface SetMetadataRequest {
    /**
     * @generated from protobuf field: repeated mavsdk.rpc.component_metadata_server.Metadata metadata = 1;
     */
    metadata: Metadata[]; // List of metadata
}
/**
 * @generated from protobuf message mavsdk.rpc.component_metadata_server.SetMetadataResponse
 */
export interface SetMetadataResponse {
}
/**
 * @generated from protobuf message mavsdk.rpc.component_metadata_server.Metadata
 */
export interface Metadata {
    /**
     * @generated from protobuf field: mavsdk.rpc.component_metadata_server.MetadataType type = 1;
     */
    type: MetadataType; // The metadata type
    /**
     * @generated from protobuf field: string json_metadata = 2;
     */
    jsonMetadata: string; // The JSON metadata
}
/**
 * @generated from protobuf enum mavsdk.rpc.component_metadata_server.MetadataType
 */
export enum MetadataType {
    /**
     * Parameter metadata
     *
     * @generated from protobuf enum value: METADATA_TYPE_PARAMETER = 0;
     */
    PARAMETER = 0,
    /**
     * Event definitions
     *
     * @generated from protobuf enum value: METADATA_TYPE_EVENTS = 1;
     */
    EVENTS = 1,
    /**
     * Actuator definitions
     *
     * @generated from protobuf enum value: METADATA_TYPE_ACTUATORS = 2;
     */
    ACTUATORS = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class SetMetadataRequest$Type extends MessageType<SetMetadataRequest> {
    constructor() {
        super("mavsdk.rpc.component_metadata_server.SetMetadataRequest", [
            { no: 1, name: "metadata", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Metadata }
        ]);
    }
    create(value?: PartialMessage<SetMetadataRequest>): SetMetadataRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.metadata = [];
        if (value !== undefined)
            reflectionMergePartial<SetMetadataRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetMetadataRequest): SetMetadataRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated mavsdk.rpc.component_metadata_server.Metadata metadata */ 1:
                    message.metadata.push(Metadata.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetMetadataRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated mavsdk.rpc.component_metadata_server.Metadata metadata = 1; */
        for (let i = 0; i < message.metadata.length; i++)
            Metadata.internalBinaryWrite(message.metadata[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message mavsdk.rpc.component_metadata_server.SetMetadataRequest
 */
export const SetMetadataRequest = new SetMetadataRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetMetadataResponse$Type extends MessageType<SetMetadataResponse> {
    constructor() {
        super("mavsdk.rpc.component_metadata_server.SetMetadataResponse", []);
    }
    create(value?: PartialMessage<SetMetadataResponse>): SetMetadataResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<SetMetadataResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetMetadataResponse): SetMetadataResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: SetMetadataResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message mavsdk.rpc.component_metadata_server.SetMetadataResponse
 */
export const SetMetadataResponse = new SetMetadataResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Metadata$Type extends MessageType<Metadata> {
    constructor() {
        super("mavsdk.rpc.component_metadata_server.Metadata", [
            { no: 1, name: "type", kind: "enum", T: () => ["mavsdk.rpc.component_metadata_server.MetadataType", MetadataType, "METADATA_TYPE_"] },
            { no: 2, name: "json_metadata", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Metadata>): Metadata {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.type = 0;
        message.jsonMetadata = "";
        if (value !== undefined)
            reflectionMergePartial<Metadata>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Metadata): Metadata {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* mavsdk.rpc.component_metadata_server.MetadataType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* string json_metadata */ 2:
                    message.jsonMetadata = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Metadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* mavsdk.rpc.component_metadata_server.MetadataType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* string json_metadata = 2; */
        if (message.jsonMetadata !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.jsonMetadata);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message mavsdk.rpc.component_metadata_server.Metadata
 */
export const Metadata = new Metadata$Type();
/**
 * @generated ServiceType for protobuf service mavsdk.rpc.component_metadata_server.ComponentMetadataServerService
 */
export const ComponentMetadataServerService = new ServiceType("mavsdk.rpc.component_metadata_server.ComponentMetadataServerService", [
    { name: "SetMetadata", options: { "mavsdk.options.async_type": "SYNC" }, I: SetMetadataRequest, O: SetMetadataResponse }
]);
