/* eslint-disable */

// source: action_server/action_server.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var mavsdk_options_pb = require('../mavsdk_options_pb.cjs');
goog.object.extend(proto, mavsdk_options_pb);
goog.exportSymbol('proto.mavsdk.rpc.action_server.ActionServerResult', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.ActionServerResult.Result', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.AllowableFlightModes', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.ArmDisarm', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.ArmDisarmResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.FlightMode', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.FlightModeChangeResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.LandResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.RebootResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SetArmableRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SetArmableResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SetDisarmableRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SetDisarmableResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.ShutdownResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SubscribeLandRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SubscribeRebootRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SubscribeShutdownRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.SubscribeTerminateRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.TakeoffResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.action_server.TerminateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest.displayName = 'proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SetArmableRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SetArmableRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SetArmableRequest.displayName = 'proto.mavsdk.rpc.action_server.SetArmableRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SetDisarmableRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SetDisarmableRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SetDisarmableRequest.displayName = 'proto.mavsdk.rpc.action_server.SetDisarmableRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.displayName = 'proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest.displayName = 'proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest.displayName = 'proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest.displayName = 'proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest.displayName = 'proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SubscribeLandRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SubscribeLandRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SubscribeLandRequest.displayName = 'proto.mavsdk.rpc.action_server.SubscribeLandRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SubscribeRebootRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SubscribeRebootRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SubscribeRebootRequest.displayName = 'proto.mavsdk.rpc.action_server.SubscribeRebootRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SubscribeShutdownRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SubscribeShutdownRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SubscribeShutdownRequest.displayName = 'proto.mavsdk.rpc.action_server.SubscribeShutdownRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SubscribeTerminateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SubscribeTerminateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SubscribeTerminateRequest.displayName = 'proto.mavsdk.rpc.action_server.SubscribeTerminateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.ArmDisarmResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.ArmDisarmResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.ArmDisarmResponse.displayName = 'proto.mavsdk.rpc.action_server.ArmDisarmResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.FlightModeChangeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.FlightModeChangeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.FlightModeChangeResponse.displayName = 'proto.mavsdk.rpc.action_server.FlightModeChangeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.TakeoffResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.TakeoffResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.TakeoffResponse.displayName = 'proto.mavsdk.rpc.action_server.TakeoffResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.LandResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.LandResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.LandResponse.displayName = 'proto.mavsdk.rpc.action_server.LandResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.RebootResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.RebootResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.RebootResponse.displayName = 'proto.mavsdk.rpc.action_server.RebootResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.ShutdownResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.ShutdownResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.ShutdownResponse.displayName = 'proto.mavsdk.rpc.action_server.ShutdownResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.TerminateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.TerminateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.TerminateResponse.displayName = 'proto.mavsdk.rpc.action_server.TerminateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SetArmableResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SetArmableResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SetArmableResponse.displayName = 'proto.mavsdk.rpc.action_server.SetArmableResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SetDisarmableResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SetDisarmableResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SetDisarmableResponse.displayName = 'proto.mavsdk.rpc.action_server.SetDisarmableResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.displayName = 'proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.displayName = 'proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.displayName = 'proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.AllowableFlightModes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.AllowableFlightModes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.AllowableFlightModes.displayName = 'proto.mavsdk.rpc.action_server.AllowableFlightModes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.ArmDisarm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.ArmDisarm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.ArmDisarm.displayName = 'proto.mavsdk.rpc.action_server.ArmDisarm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.action_server.ActionServerResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.action_server.ActionServerResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.action_server.ActionServerResult.displayName = 'proto.mavsdk.rpc.action_server.ActionServerResult';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    allowTakeoff: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest}
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest;
  return proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest}
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowTakeoff(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllowTakeoff();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool allow_takeoff = 1;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest.prototype.getAllowTakeoff = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest} returns this
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffRequest.prototype.setAllowTakeoff = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SetArmableRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SetArmableRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SetArmableRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetArmableRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    armable: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    forceArmable: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SetArmableRequest}
 */
proto.mavsdk.rpc.action_server.SetArmableRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SetArmableRequest;
  return proto.mavsdk.rpc.action_server.SetArmableRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SetArmableRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SetArmableRequest}
 */
proto.mavsdk.rpc.action_server.SetArmableRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArmable(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceArmable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SetArmableRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SetArmableRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SetArmableRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetArmableRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArmable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getForceArmable();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool armable = 1;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.SetArmableRequest.prototype.getArmable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.SetArmableRequest} returns this
 */
proto.mavsdk.rpc.action_server.SetArmableRequest.prototype.setArmable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool force_armable = 2;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.SetArmableRequest.prototype.getForceArmable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.SetArmableRequest} returns this
 */
proto.mavsdk.rpc.action_server.SetArmableRequest.prototype.setForceArmable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SetDisarmableRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SetDisarmableRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SetDisarmableRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetDisarmableRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    disarmable: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    forceDisarmable: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SetDisarmableRequest}
 */
proto.mavsdk.rpc.action_server.SetDisarmableRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SetDisarmableRequest;
  return proto.mavsdk.rpc.action_server.SetDisarmableRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SetDisarmableRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SetDisarmableRequest}
 */
proto.mavsdk.rpc.action_server.SetDisarmableRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisarmable(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceDisarmable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SetDisarmableRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SetDisarmableRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SetDisarmableRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetDisarmableRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisarmable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getForceDisarmable();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool disarmable = 1;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.SetDisarmableRequest.prototype.getDisarmable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.SetDisarmableRequest} returns this
 */
proto.mavsdk.rpc.action_server.SetDisarmableRequest.prototype.setDisarmable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool force_disarmable = 2;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.SetDisarmableRequest.prototype.getForceDisarmable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.SetDisarmableRequest} returns this
 */
proto.mavsdk.rpc.action_server.SetDisarmableRequest.prototype.setForceDisarmable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    flightModes: (f = msg.getFlightModes()) && proto.mavsdk.rpc.action_server.AllowableFlightModes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest}
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest;
  return proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest}
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.action_server.AllowableFlightModes;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.AllowableFlightModes.deserializeBinaryFromReader);
      msg.setFlightModes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFlightModes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.action_server.AllowableFlightModes.serializeBinaryToWriter
    );
  }
};


/**
 * optional AllowableFlightModes flight_modes = 1;
 * @return {?proto.mavsdk.rpc.action_server.AllowableFlightModes}
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.prototype.getFlightModes = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.AllowableFlightModes} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.AllowableFlightModes, 1));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.AllowableFlightModes|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest} returns this
*/
proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.prototype.setFlightModes = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest} returns this
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.prototype.clearFlightModes = function() {
  return this.setFlightModes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesRequest.prototype.hasFlightModes = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest}
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest;
  return proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest}
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest;
  return proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeArmDisarmRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest;
  return proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeFlightModeChangeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest;
  return proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeTakeoffRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SubscribeLandRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SubscribeLandRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SubscribeLandRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeLandRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeLandRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeLandRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SubscribeLandRequest;
  return proto.mavsdk.rpc.action_server.SubscribeLandRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeLandRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeLandRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeLandRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SubscribeLandRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SubscribeLandRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeLandRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeLandRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SubscribeRebootRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SubscribeRebootRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SubscribeRebootRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeRebootRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeRebootRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeRebootRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SubscribeRebootRequest;
  return proto.mavsdk.rpc.action_server.SubscribeRebootRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeRebootRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeRebootRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeRebootRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SubscribeRebootRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SubscribeRebootRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeRebootRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeRebootRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SubscribeShutdownRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SubscribeShutdownRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SubscribeShutdownRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeShutdownRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeShutdownRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeShutdownRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SubscribeShutdownRequest;
  return proto.mavsdk.rpc.action_server.SubscribeShutdownRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeShutdownRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeShutdownRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeShutdownRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SubscribeShutdownRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SubscribeShutdownRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeShutdownRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeShutdownRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SubscribeTerminateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SubscribeTerminateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SubscribeTerminateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeTerminateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeTerminateRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeTerminateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SubscribeTerminateRequest;
  return proto.mavsdk.rpc.action_server.SubscribeTerminateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeTerminateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SubscribeTerminateRequest}
 */
proto.mavsdk.rpc.action_server.SubscribeTerminateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SubscribeTerminateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SubscribeTerminateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SubscribeTerminateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SubscribeTerminateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.ArmDisarmResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.ArmDisarmResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.ArmDisarmResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.ArmDisarmResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionServerResult: (f = msg.getActionServerResult()) && proto.mavsdk.rpc.action_server.ActionServerResult.toObject(includeInstance, f),
    arm: (f = msg.getArm()) && proto.mavsdk.rpc.action_server.ArmDisarm.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.ArmDisarmResponse}
 */
proto.mavsdk.rpc.action_server.ArmDisarmResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.ArmDisarmResponse;
  return proto.mavsdk.rpc.action_server.ArmDisarmResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.ArmDisarmResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.ArmDisarmResponse}
 */
proto.mavsdk.rpc.action_server.ArmDisarmResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.action_server.ActionServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinaryFromReader);
      msg.setActionServerResult(value);
      break;
    case 2:
      var value = new proto.mavsdk.rpc.action_server.ArmDisarm;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.ArmDisarm.deserializeBinaryFromReader);
      msg.setArm(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.ArmDisarmResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.ArmDisarmResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.ArmDisarmResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.ArmDisarmResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.action_server.ActionServerResult.serializeBinaryToWriter
    );
  }
  f = message.getArm();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mavsdk.rpc.action_server.ArmDisarm.serializeBinaryToWriter
    );
  }
};


/**
 * optional ActionServerResult action_server_result = 1;
 * @return {?proto.mavsdk.rpc.action_server.ActionServerResult}
 */
proto.mavsdk.rpc.action_server.ArmDisarmResponse.prototype.getActionServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.ActionServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.ActionServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.ActionServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.ArmDisarmResponse} returns this
*/
proto.mavsdk.rpc.action_server.ArmDisarmResponse.prototype.setActionServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.ArmDisarmResponse} returns this
 */
proto.mavsdk.rpc.action_server.ArmDisarmResponse.prototype.clearActionServerResult = function() {
  return this.setActionServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.ArmDisarmResponse.prototype.hasActionServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ArmDisarm arm = 2;
 * @return {?proto.mavsdk.rpc.action_server.ArmDisarm}
 */
proto.mavsdk.rpc.action_server.ArmDisarmResponse.prototype.getArm = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.ArmDisarm} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.ArmDisarm, 2));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.ArmDisarm|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.ArmDisarmResponse} returns this
*/
proto.mavsdk.rpc.action_server.ArmDisarmResponse.prototype.setArm = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.ArmDisarmResponse} returns this
 */
proto.mavsdk.rpc.action_server.ArmDisarmResponse.prototype.clearArm = function() {
  return this.setArm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.ArmDisarmResponse.prototype.hasArm = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.FlightModeChangeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.FlightModeChangeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.FlightModeChangeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.FlightModeChangeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionServerResult: (f = msg.getActionServerResult()) && proto.mavsdk.rpc.action_server.ActionServerResult.toObject(includeInstance, f),
    flightMode: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.FlightModeChangeResponse}
 */
proto.mavsdk.rpc.action_server.FlightModeChangeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.FlightModeChangeResponse;
  return proto.mavsdk.rpc.action_server.FlightModeChangeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.FlightModeChangeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.FlightModeChangeResponse}
 */
proto.mavsdk.rpc.action_server.FlightModeChangeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.action_server.ActionServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinaryFromReader);
      msg.setActionServerResult(value);
      break;
    case 2:
      var value = /** @type {!proto.mavsdk.rpc.action_server.FlightMode} */ (reader.readEnum());
      msg.setFlightMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.FlightModeChangeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.FlightModeChangeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.FlightModeChangeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.FlightModeChangeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.action_server.ActionServerResult.serializeBinaryToWriter
    );
  }
  f = message.getFlightMode();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional ActionServerResult action_server_result = 1;
 * @return {?proto.mavsdk.rpc.action_server.ActionServerResult}
 */
proto.mavsdk.rpc.action_server.FlightModeChangeResponse.prototype.getActionServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.ActionServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.ActionServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.ActionServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.FlightModeChangeResponse} returns this
*/
proto.mavsdk.rpc.action_server.FlightModeChangeResponse.prototype.setActionServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.FlightModeChangeResponse} returns this
 */
proto.mavsdk.rpc.action_server.FlightModeChangeResponse.prototype.clearActionServerResult = function() {
  return this.setActionServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.FlightModeChangeResponse.prototype.hasActionServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FlightMode flight_mode = 2;
 * @return {!proto.mavsdk.rpc.action_server.FlightMode}
 */
proto.mavsdk.rpc.action_server.FlightModeChangeResponse.prototype.getFlightMode = function() {
  return /** @type {!proto.mavsdk.rpc.action_server.FlightMode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mavsdk.rpc.action_server.FlightMode} value
 * @return {!proto.mavsdk.rpc.action_server.FlightModeChangeResponse} returns this
 */
proto.mavsdk.rpc.action_server.FlightModeChangeResponse.prototype.setFlightMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.TakeoffResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.TakeoffResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.TakeoffResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.TakeoffResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionServerResult: (f = msg.getActionServerResult()) && proto.mavsdk.rpc.action_server.ActionServerResult.toObject(includeInstance, f),
    takeoff: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.TakeoffResponse}
 */
proto.mavsdk.rpc.action_server.TakeoffResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.TakeoffResponse;
  return proto.mavsdk.rpc.action_server.TakeoffResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.TakeoffResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.TakeoffResponse}
 */
proto.mavsdk.rpc.action_server.TakeoffResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.action_server.ActionServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinaryFromReader);
      msg.setActionServerResult(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTakeoff(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.TakeoffResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.TakeoffResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.TakeoffResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.TakeoffResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.action_server.ActionServerResult.serializeBinaryToWriter
    );
  }
  f = message.getTakeoff();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional ActionServerResult action_server_result = 1;
 * @return {?proto.mavsdk.rpc.action_server.ActionServerResult}
 */
proto.mavsdk.rpc.action_server.TakeoffResponse.prototype.getActionServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.ActionServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.ActionServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.ActionServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.TakeoffResponse} returns this
*/
proto.mavsdk.rpc.action_server.TakeoffResponse.prototype.setActionServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.TakeoffResponse} returns this
 */
proto.mavsdk.rpc.action_server.TakeoffResponse.prototype.clearActionServerResult = function() {
  return this.setActionServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.TakeoffResponse.prototype.hasActionServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool takeoff = 2;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.TakeoffResponse.prototype.getTakeoff = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.TakeoffResponse} returns this
 */
proto.mavsdk.rpc.action_server.TakeoffResponse.prototype.setTakeoff = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.LandResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.LandResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.LandResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.LandResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionServerResult: (f = msg.getActionServerResult()) && proto.mavsdk.rpc.action_server.ActionServerResult.toObject(includeInstance, f),
    land: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.LandResponse}
 */
proto.mavsdk.rpc.action_server.LandResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.LandResponse;
  return proto.mavsdk.rpc.action_server.LandResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.LandResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.LandResponse}
 */
proto.mavsdk.rpc.action_server.LandResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.action_server.ActionServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinaryFromReader);
      msg.setActionServerResult(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.LandResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.LandResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.LandResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.LandResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.action_server.ActionServerResult.serializeBinaryToWriter
    );
  }
  f = message.getLand();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional ActionServerResult action_server_result = 1;
 * @return {?proto.mavsdk.rpc.action_server.ActionServerResult}
 */
proto.mavsdk.rpc.action_server.LandResponse.prototype.getActionServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.ActionServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.ActionServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.ActionServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.LandResponse} returns this
*/
proto.mavsdk.rpc.action_server.LandResponse.prototype.setActionServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.LandResponse} returns this
 */
proto.mavsdk.rpc.action_server.LandResponse.prototype.clearActionServerResult = function() {
  return this.setActionServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.LandResponse.prototype.hasActionServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool land = 2;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.LandResponse.prototype.getLand = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.LandResponse} returns this
 */
proto.mavsdk.rpc.action_server.LandResponse.prototype.setLand = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.RebootResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.RebootResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.RebootResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.RebootResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionServerResult: (f = msg.getActionServerResult()) && proto.mavsdk.rpc.action_server.ActionServerResult.toObject(includeInstance, f),
    reboot: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.RebootResponse}
 */
proto.mavsdk.rpc.action_server.RebootResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.RebootResponse;
  return proto.mavsdk.rpc.action_server.RebootResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.RebootResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.RebootResponse}
 */
proto.mavsdk.rpc.action_server.RebootResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.action_server.ActionServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinaryFromReader);
      msg.setActionServerResult(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReboot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.RebootResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.RebootResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.RebootResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.RebootResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.action_server.ActionServerResult.serializeBinaryToWriter
    );
  }
  f = message.getReboot();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional ActionServerResult action_server_result = 1;
 * @return {?proto.mavsdk.rpc.action_server.ActionServerResult}
 */
proto.mavsdk.rpc.action_server.RebootResponse.prototype.getActionServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.ActionServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.ActionServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.ActionServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.RebootResponse} returns this
*/
proto.mavsdk.rpc.action_server.RebootResponse.prototype.setActionServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.RebootResponse} returns this
 */
proto.mavsdk.rpc.action_server.RebootResponse.prototype.clearActionServerResult = function() {
  return this.setActionServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.RebootResponse.prototype.hasActionServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool reboot = 2;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.RebootResponse.prototype.getReboot = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.RebootResponse} returns this
 */
proto.mavsdk.rpc.action_server.RebootResponse.prototype.setReboot = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.ShutdownResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.ShutdownResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.ShutdownResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.ShutdownResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionServerResult: (f = msg.getActionServerResult()) && proto.mavsdk.rpc.action_server.ActionServerResult.toObject(includeInstance, f),
    shutdown: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.ShutdownResponse}
 */
proto.mavsdk.rpc.action_server.ShutdownResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.ShutdownResponse;
  return proto.mavsdk.rpc.action_server.ShutdownResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.ShutdownResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.ShutdownResponse}
 */
proto.mavsdk.rpc.action_server.ShutdownResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.action_server.ActionServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinaryFromReader);
      msg.setActionServerResult(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShutdown(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.ShutdownResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.ShutdownResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.ShutdownResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.ShutdownResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.action_server.ActionServerResult.serializeBinaryToWriter
    );
  }
  f = message.getShutdown();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional ActionServerResult action_server_result = 1;
 * @return {?proto.mavsdk.rpc.action_server.ActionServerResult}
 */
proto.mavsdk.rpc.action_server.ShutdownResponse.prototype.getActionServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.ActionServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.ActionServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.ActionServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.ShutdownResponse} returns this
*/
proto.mavsdk.rpc.action_server.ShutdownResponse.prototype.setActionServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.ShutdownResponse} returns this
 */
proto.mavsdk.rpc.action_server.ShutdownResponse.prototype.clearActionServerResult = function() {
  return this.setActionServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.ShutdownResponse.prototype.hasActionServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool shutdown = 2;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.ShutdownResponse.prototype.getShutdown = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.ShutdownResponse} returns this
 */
proto.mavsdk.rpc.action_server.ShutdownResponse.prototype.setShutdown = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.TerminateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.TerminateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.TerminateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.TerminateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionServerResult: (f = msg.getActionServerResult()) && proto.mavsdk.rpc.action_server.ActionServerResult.toObject(includeInstance, f),
    terminate: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.TerminateResponse}
 */
proto.mavsdk.rpc.action_server.TerminateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.TerminateResponse;
  return proto.mavsdk.rpc.action_server.TerminateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.TerminateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.TerminateResponse}
 */
proto.mavsdk.rpc.action_server.TerminateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.action_server.ActionServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinaryFromReader);
      msg.setActionServerResult(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTerminate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.TerminateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.TerminateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.TerminateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.TerminateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.action_server.ActionServerResult.serializeBinaryToWriter
    );
  }
  f = message.getTerminate();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional ActionServerResult action_server_result = 1;
 * @return {?proto.mavsdk.rpc.action_server.ActionServerResult}
 */
proto.mavsdk.rpc.action_server.TerminateResponse.prototype.getActionServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.ActionServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.ActionServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.ActionServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.TerminateResponse} returns this
*/
proto.mavsdk.rpc.action_server.TerminateResponse.prototype.setActionServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.TerminateResponse} returns this
 */
proto.mavsdk.rpc.action_server.TerminateResponse.prototype.clearActionServerResult = function() {
  return this.setActionServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.TerminateResponse.prototype.hasActionServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool terminate = 2;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.TerminateResponse.prototype.getTerminate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.TerminateResponse} returns this
 */
proto.mavsdk.rpc.action_server.TerminateResponse.prototype.setTerminate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SetArmableResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SetArmableResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SetArmableResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetArmableResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionServerResult: (f = msg.getActionServerResult()) && proto.mavsdk.rpc.action_server.ActionServerResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SetArmableResponse}
 */
proto.mavsdk.rpc.action_server.SetArmableResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SetArmableResponse;
  return proto.mavsdk.rpc.action_server.SetArmableResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SetArmableResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SetArmableResponse}
 */
proto.mavsdk.rpc.action_server.SetArmableResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.action_server.ActionServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinaryFromReader);
      msg.setActionServerResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SetArmableResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SetArmableResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SetArmableResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetArmableResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.action_server.ActionServerResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional ActionServerResult action_server_result = 1;
 * @return {?proto.mavsdk.rpc.action_server.ActionServerResult}
 */
proto.mavsdk.rpc.action_server.SetArmableResponse.prototype.getActionServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.ActionServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.ActionServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.ActionServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.SetArmableResponse} returns this
*/
proto.mavsdk.rpc.action_server.SetArmableResponse.prototype.setActionServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.SetArmableResponse} returns this
 */
proto.mavsdk.rpc.action_server.SetArmableResponse.prototype.clearActionServerResult = function() {
  return this.setActionServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.SetArmableResponse.prototype.hasActionServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SetDisarmableResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SetDisarmableResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SetDisarmableResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetDisarmableResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionServerResult: (f = msg.getActionServerResult()) && proto.mavsdk.rpc.action_server.ActionServerResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SetDisarmableResponse}
 */
proto.mavsdk.rpc.action_server.SetDisarmableResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SetDisarmableResponse;
  return proto.mavsdk.rpc.action_server.SetDisarmableResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SetDisarmableResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SetDisarmableResponse}
 */
proto.mavsdk.rpc.action_server.SetDisarmableResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.action_server.ActionServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinaryFromReader);
      msg.setActionServerResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SetDisarmableResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SetDisarmableResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SetDisarmableResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetDisarmableResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.action_server.ActionServerResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional ActionServerResult action_server_result = 1;
 * @return {?proto.mavsdk.rpc.action_server.ActionServerResult}
 */
proto.mavsdk.rpc.action_server.SetDisarmableResponse.prototype.getActionServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.ActionServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.ActionServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.ActionServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.SetDisarmableResponse} returns this
*/
proto.mavsdk.rpc.action_server.SetDisarmableResponse.prototype.setActionServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.SetDisarmableResponse} returns this
 */
proto.mavsdk.rpc.action_server.SetDisarmableResponse.prototype.clearActionServerResult = function() {
  return this.setActionServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.SetDisarmableResponse.prototype.hasActionServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionServerResult: (f = msg.getActionServerResult()) && proto.mavsdk.rpc.action_server.ActionServerResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse}
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse;
  return proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse}
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.action_server.ActionServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinaryFromReader);
      msg.setActionServerResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.action_server.ActionServerResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional ActionServerResult action_server_result = 1;
 * @return {?proto.mavsdk.rpc.action_server.ActionServerResult}
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.prototype.getActionServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.ActionServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.ActionServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.ActionServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse} returns this
*/
proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.prototype.setActionServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse} returns this
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.prototype.clearActionServerResult = function() {
  return this.setActionServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.SetAllowableFlightModesResponse.prototype.hasActionServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionServerResult: (f = msg.getActionServerResult()) && proto.mavsdk.rpc.action_server.ActionServerResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse}
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse;
  return proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse}
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.action_server.ActionServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinaryFromReader);
      msg.setActionServerResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.action_server.ActionServerResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional ActionServerResult action_server_result = 1;
 * @return {?proto.mavsdk.rpc.action_server.ActionServerResult}
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.prototype.getActionServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.ActionServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.ActionServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.ActionServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse} returns this
*/
proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.prototype.setActionServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse} returns this
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.prototype.clearActionServerResult = function() {
  return this.setActionServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.SetAllowTakeoffResponse.prototype.hasActionServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    flightModes: (f = msg.getFlightModes()) && proto.mavsdk.rpc.action_server.AllowableFlightModes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse}
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse;
  return proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse}
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.action_server.AllowableFlightModes;
      reader.readMessage(value,proto.mavsdk.rpc.action_server.AllowableFlightModes.deserializeBinaryFromReader);
      msg.setFlightModes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFlightModes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.action_server.AllowableFlightModes.serializeBinaryToWriter
    );
  }
};


/**
 * optional AllowableFlightModes flight_modes = 1;
 * @return {?proto.mavsdk.rpc.action_server.AllowableFlightModes}
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.prototype.getFlightModes = function() {
  return /** @type{?proto.mavsdk.rpc.action_server.AllowableFlightModes} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.action_server.AllowableFlightModes, 1));
};


/**
 * @param {?proto.mavsdk.rpc.action_server.AllowableFlightModes|undefined} value
 * @return {!proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse} returns this
*/
proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.prototype.setFlightModes = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse} returns this
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.prototype.clearFlightModes = function() {
  return this.setFlightModes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.GetAllowableFlightModesResponse.prototype.hasFlightModes = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.AllowableFlightModes.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.AllowableFlightModes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.AllowableFlightModes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.AllowableFlightModes.toObject = function(includeInstance, msg) {
  var f, obj = {
    canAutoMode: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    canGuidedMode: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    canStabilizeMode: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.AllowableFlightModes}
 */
proto.mavsdk.rpc.action_server.AllowableFlightModes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.AllowableFlightModes;
  return proto.mavsdk.rpc.action_server.AllowableFlightModes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.AllowableFlightModes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.AllowableFlightModes}
 */
proto.mavsdk.rpc.action_server.AllowableFlightModes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanAutoMode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanGuidedMode(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanStabilizeMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.AllowableFlightModes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.AllowableFlightModes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.AllowableFlightModes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.AllowableFlightModes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCanAutoMode();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCanGuidedMode();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getCanStabilizeMode();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bool can_auto_mode = 1;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.AllowableFlightModes.prototype.getCanAutoMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.AllowableFlightModes} returns this
 */
proto.mavsdk.rpc.action_server.AllowableFlightModes.prototype.setCanAutoMode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool can_guided_mode = 2;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.AllowableFlightModes.prototype.getCanGuidedMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.AllowableFlightModes} returns this
 */
proto.mavsdk.rpc.action_server.AllowableFlightModes.prototype.setCanGuidedMode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool can_stabilize_mode = 3;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.AllowableFlightModes.prototype.getCanStabilizeMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.AllowableFlightModes} returns this
 */
proto.mavsdk.rpc.action_server.AllowableFlightModes.prototype.setCanStabilizeMode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.ArmDisarm.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.ArmDisarm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.ArmDisarm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.ArmDisarm.toObject = function(includeInstance, msg) {
  var f, obj = {
    arm: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    force: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.ArmDisarm}
 */
proto.mavsdk.rpc.action_server.ArmDisarm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.ArmDisarm;
  return proto.mavsdk.rpc.action_server.ArmDisarm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.ArmDisarm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.ArmDisarm}
 */
proto.mavsdk.rpc.action_server.ArmDisarm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArm(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.ArmDisarm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.ArmDisarm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.ArmDisarm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.ArmDisarm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArm();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getForce();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool arm = 1;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.ArmDisarm.prototype.getArm = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.ArmDisarm} returns this
 */
proto.mavsdk.rpc.action_server.ArmDisarm.prototype.setArm = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool force = 2;
 * @return {boolean}
 */
proto.mavsdk.rpc.action_server.ArmDisarm.prototype.getForce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.action_server.ArmDisarm} returns this
 */
proto.mavsdk.rpc.action_server.ArmDisarm.prototype.setForce = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.action_server.ActionServerResult.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.action_server.ActionServerResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.action_server.ActionServerResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.ActionServerResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0),
    resultStr: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.action_server.ActionServerResult}
 */
proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.action_server.ActionServerResult;
  return proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.action_server.ActionServerResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.action_server.ActionServerResult}
 */
proto.mavsdk.rpc.action_server.ActionServerResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mavsdk.rpc.action_server.ActionServerResult.Result} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.action_server.ActionServerResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.action_server.ActionServerResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.action_server.ActionServerResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.action_server.ActionServerResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getResultStr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mavsdk.rpc.action_server.ActionServerResult.Result = {
  RESULT_UNKNOWN: 0,
  RESULT_SUCCESS: 1,
  RESULT_NO_SYSTEM: 2,
  RESULT_CONNECTION_ERROR: 3,
  RESULT_BUSY: 4,
  RESULT_COMMAND_DENIED: 5,
  RESULT_COMMAND_DENIED_LANDED_STATE_UNKNOWN: 6,
  RESULT_COMMAND_DENIED_NOT_LANDED: 7,
  RESULT_TIMEOUT: 8,
  RESULT_VTOL_TRANSITION_SUPPORT_UNKNOWN: 9,
  RESULT_NO_VTOL_TRANSITION_SUPPORT: 10,
  RESULT_PARAMETER_ERROR: 11,
  RESULT_NEXT: 12
};

/**
 * optional Result result = 1;
 * @return {!proto.mavsdk.rpc.action_server.ActionServerResult.Result}
 */
proto.mavsdk.rpc.action_server.ActionServerResult.prototype.getResult = function() {
  return /** @type {!proto.mavsdk.rpc.action_server.ActionServerResult.Result} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mavsdk.rpc.action_server.ActionServerResult.Result} value
 * @return {!proto.mavsdk.rpc.action_server.ActionServerResult} returns this
 */
proto.mavsdk.rpc.action_server.ActionServerResult.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string result_str = 2;
 * @return {string}
 */
proto.mavsdk.rpc.action_server.ActionServerResult.prototype.getResultStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.action_server.ActionServerResult} returns this
 */
proto.mavsdk.rpc.action_server.ActionServerResult.prototype.setResultStr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.mavsdk.rpc.action_server.FlightMode = {
  FLIGHT_MODE_UNKNOWN: 0,
  FLIGHT_MODE_READY: 1,
  FLIGHT_MODE_TAKEOFF: 2,
  FLIGHT_MODE_HOLD: 3,
  FLIGHT_MODE_MISSION: 4,
  FLIGHT_MODE_RETURN_TO_LAUNCH: 5,
  FLIGHT_MODE_LAND: 6,
  FLIGHT_MODE_OFFBOARD: 7,
  FLIGHT_MODE_FOLLOW_ME: 8,
  FLIGHT_MODE_MANUAL: 9,
  FLIGHT_MODE_ALTCTL: 10,
  FLIGHT_MODE_POSCTL: 11,
  FLIGHT_MODE_ACRO: 12,
  FLIGHT_MODE_STABILIZED: 13
};

goog.object.extend(exports, proto.mavsdk.rpc.action_server);


// fix autocompletion
module.exports = exports;
