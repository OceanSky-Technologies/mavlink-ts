/* eslint-disable */

// source: mission_raw_server/mission_raw_server.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var mavsdk_options_pb = require('../mavsdk_options_pb.cjs');
goog.object.extend(proto, mavsdk_options_pb);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw_server.ClearAllResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw_server.MissionItem', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw_server.MissionPlan', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw_server.MissionProgress', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.Result', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest.displayName = 'proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.displayName = 'proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest.displayName = 'proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.displayName = 'proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest.displayName = 'proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw_server.ClearAllResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw_server.ClearAllResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw_server.ClearAllResponse.displayName = 'proto.mavsdk.rpc.mission_raw_server.ClearAllResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest.displayName = 'proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse.displayName = 'proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw_server.MissionItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw_server.MissionItem.displayName = 'proto.mavsdk.rpc.mission_raw_server.MissionItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw_server.MissionPlan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mavsdk.rpc.mission_raw_server.MissionPlan.repeatedFields_, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw_server.MissionPlan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw_server.MissionPlan.displayName = 'proto.mavsdk.rpc.mission_raw_server.MissionPlan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw_server.MissionProgress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw_server.MissionProgress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw_server.MissionProgress.displayName = 'proto.mavsdk.rpc.mission_raw_server.MissionProgress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.displayName = 'proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest}
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest;
  return proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest}
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeIncomingMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionRawServerResult: (f = msg.getMissionRawServerResult()) && proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.toObject(includeInstance, f),
    missionPlan: (f = msg.getMissionPlan()) && proto.mavsdk.rpc.mission_raw_server.MissionPlan.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse}
 */
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse;
  return proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse}
 */
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.deserializeBinaryFromReader);
      msg.setMissionRawServerResult(value);
      break;
    case 2:
      var value = new proto.mavsdk.rpc.mission_raw_server.MissionPlan;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw_server.MissionPlan.deserializeBinaryFromReader);
      msg.setMissionPlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionRawServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.serializeBinaryToWriter
    );
  }
  f = message.getMissionPlan();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mavsdk.rpc.mission_raw_server.MissionPlan.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRawServerResult mission_raw_server_result = 1;
 * @return {?proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult}
 */
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.prototype.getMissionRawServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse} returns this
*/
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.prototype.setMissionRawServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse} returns this
 */
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.prototype.clearMissionRawServerResult = function() {
  return this.setMissionRawServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.prototype.hasMissionRawServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MissionPlan mission_plan = 2;
 * @return {?proto.mavsdk.rpc.mission_raw_server.MissionPlan}
 */
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.prototype.getMissionPlan = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw_server.MissionPlan} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw_server.MissionPlan, 2));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw_server.MissionPlan|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse} returns this
*/
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.prototype.setMissionPlan = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse} returns this
 */
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.prototype.clearMissionPlan = function() {
  return this.setMissionPlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw_server.IncomingMissionResponse.prototype.hasMissionPlan = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest}
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest;
  return proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest}
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeCurrentItemChangedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionItem: (f = msg.getMissionItem()) && proto.mavsdk.rpc.mission_raw_server.MissionItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse}
 */
proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse;
  return proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse}
 */
proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw_server.MissionItem;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw_server.MissionItem.deserializeBinaryFromReader);
      msg.setMissionItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw_server.MissionItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionItem mission_item = 1;
 * @return {?proto.mavsdk.rpc.mission_raw_server.MissionItem}
 */
proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.prototype.getMissionItem = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw_server.MissionItem} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw_server.MissionItem, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw_server.MissionItem|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse} returns this
*/
proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.prototype.setMissionItem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse} returns this
 */
proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.prototype.clearMissionItem = function() {
  return this.setMissionItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw_server.CurrentItemChangedResponse.prototype.hasMissionItem = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest}
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest;
  return proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest}
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.SubscribeClearAllRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw_server.ClearAllResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw_server.ClearAllResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw_server.ClearAllResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.ClearAllResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    clearType: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw_server.ClearAllResponse}
 */
proto.mavsdk.rpc.mission_raw_server.ClearAllResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw_server.ClearAllResponse;
  return proto.mavsdk.rpc.mission_raw_server.ClearAllResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw_server.ClearAllResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw_server.ClearAllResponse}
 */
proto.mavsdk.rpc.mission_raw_server.ClearAllResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClearType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw_server.ClearAllResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw_server.ClearAllResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw_server.ClearAllResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.ClearAllResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClearType();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 clear_type = 1;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.ClearAllResponse.prototype.getClearType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.ClearAllResponse} returns this
 */
proto.mavsdk.rpc.mission_raw_server.ClearAllResponse.prototype.setClearType = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest}
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest;
  return proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest}
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse}
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse;
  return proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse}
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.SetCurrentItemCompleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw_server.MissionItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    seq: jspb.Message.getFieldWithDefault(msg, 1, 0),
    frame: jspb.Message.getFieldWithDefault(msg, 2, 0),
    command: jspb.Message.getFieldWithDefault(msg, 3, 0),
    current: jspb.Message.getFieldWithDefault(msg, 4, 0),
    autocontinue: jspb.Message.getFieldWithDefault(msg, 5, 0),
    param1: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    param2: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    param3: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    param4: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    x: jspb.Message.getFieldWithDefault(msg, 10, 0),
    y: jspb.Message.getFieldWithDefault(msg, 11, 0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    missionType: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw_server.MissionItem;
  return proto.mavsdk.rpc.mission_raw_server.MissionItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSeq(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFrame(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCommand(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrent(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAutocontinue(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setParam1(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setParam2(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setParam3(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setParam4(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMissionType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw_server.MissionItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeq();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getFrame();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getCommand();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getCurrent();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getAutocontinue();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getParam1();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getParam2();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getParam3();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getParam4();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getMissionType();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
};


/**
 * optional uint32 seq = 1;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.getSeq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.setSeq = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 frame = 2;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.getFrame = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.setFrame = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 command = 3;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.getCommand = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.setCommand = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 current = 4;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.getCurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.setCurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 autocontinue = 5;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.getAutocontinue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.setAutocontinue = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional float param1 = 6;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.getParam1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.setParam1 = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float param2 = 7;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.getParam2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.setParam2 = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float param3 = 8;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.getParam3 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.setParam3 = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float param4 = 9;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.getParam4 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.setParam4 = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional int32 x = 10;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 y = 11;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional float z = 12;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional uint32 mission_type = 13;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.getMissionType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionItem.prototype.setMissionType = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mavsdk.rpc.mission_raw_server.MissionPlan.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw_server.MissionPlan.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw_server.MissionPlan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionPlan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.MissionPlan.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionItemsList: jspb.Message.toObjectList(msg.getMissionItemsList(),
    proto.mavsdk.rpc.mission_raw_server.MissionItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionPlan}
 */
proto.mavsdk.rpc.mission_raw_server.MissionPlan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw_server.MissionPlan;
  return proto.mavsdk.rpc.mission_raw_server.MissionPlan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionPlan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionPlan}
 */
proto.mavsdk.rpc.mission_raw_server.MissionPlan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw_server.MissionItem;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw_server.MissionItem.deserializeBinaryFromReader);
      msg.addMissionItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw_server.MissionPlan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw_server.MissionPlan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionPlan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.MissionPlan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw_server.MissionItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MissionItem mission_items = 1;
 * @return {!Array<!proto.mavsdk.rpc.mission_raw_server.MissionItem>}
 */
proto.mavsdk.rpc.mission_raw_server.MissionPlan.prototype.getMissionItemsList = function() {
  return /** @type{!Array<!proto.mavsdk.rpc.mission_raw_server.MissionItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mavsdk.rpc.mission_raw_server.MissionItem, 1));
};


/**
 * @param {!Array<!proto.mavsdk.rpc.mission_raw_server.MissionItem>} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionPlan} returns this
*/
proto.mavsdk.rpc.mission_raw_server.MissionPlan.prototype.setMissionItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionItem}
 */
proto.mavsdk.rpc.mission_raw_server.MissionPlan.prototype.addMissionItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mavsdk.rpc.mission_raw_server.MissionItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionPlan} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionPlan.prototype.clearMissionItemsList = function() {
  return this.setMissionItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw_server.MissionProgress.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw_server.MissionProgress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionProgress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.MissionProgress.toObject = function(includeInstance, msg) {
  var f, obj = {
    current: jspb.Message.getFieldWithDefault(msg, 1, 0),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionProgress}
 */
proto.mavsdk.rpc.mission_raw_server.MissionProgress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw_server.MissionProgress;
  return proto.mavsdk.rpc.mission_raw_server.MissionProgress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionProgress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionProgress}
 */
proto.mavsdk.rpc.mission_raw_server.MissionProgress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw_server.MissionProgress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw_server.MissionProgress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionProgress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.MissionProgress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrent();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 current = 1;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionProgress.prototype.getCurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionProgress} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionProgress.prototype.setCurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 total = 2;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionProgress.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionProgress} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionProgress.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0),
    resultStr: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult}
 */
proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult;
  return proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult}
 */
proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.Result} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getResultStr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.Result = {
  RESULT_UNKNOWN: 0,
  RESULT_SUCCESS: 1,
  RESULT_ERROR: 2,
  RESULT_TOO_MANY_MISSION_ITEMS: 3,
  RESULT_BUSY: 4,
  RESULT_TIMEOUT: 5,
  RESULT_INVALID_ARGUMENT: 6,
  RESULT_UNSUPPORTED: 7,
  RESULT_NO_MISSION_AVAILABLE: 8,
  RESULT_UNSUPPORTED_MISSION_CMD: 11,
  RESULT_TRANSFER_CANCELLED: 12,
  RESULT_NO_SYSTEM: 13,
  RESULT_NEXT: 14
};

/**
 * optional Result result = 1;
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.Result}
 */
proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.prototype.getResult = function() {
  return /** @type {!proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.Result} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.Result} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string result_str = 2;
 * @return {string}
 */
proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.prototype.getResultStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult} returns this
 */
proto.mavsdk.rpc.mission_raw_server.MissionRawServerResult.prototype.setResultStr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.mavsdk.rpc.mission_raw_server);


// fix autocompletion
module.exports = exports;
