/* eslint-disable */

// source: arm_authorizer_server/arm_authorizer_server.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var mavsdk_options_pb = require('../mavsdk_options_pb.cjs');
goog.object.extend(proto, mavsdk_options_pb);
goog.exportSymbol('proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult', null, global);
goog.exportSymbol('proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.Result', null, global);
goog.exportSymbol('proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.arm_authorizer_server.RejectionReason', null, global);
goog.exportSymbol('proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest.displayName = 'proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse.displayName = 'proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest.displayName = 'proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.displayName = 'proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.displayName = 'proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.displayName = 'proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.displayName = 'proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest}
 */
proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest;
  return proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest}
 */
proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.SubscribeArmAuthorizationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    systemId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse}
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse;
  return proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse}
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSystemId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSystemId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 system_id = 1;
 * @return {number}
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse.prototype.getSystemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse} returns this
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizationResponse.prototype.setSystemId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    validTimeS: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest}
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest;
  return proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest}
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValidTimeS(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidTimeS();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 valid_time_s = 1;
 * @return {number}
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest.prototype.getValidTimeS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest} returns this
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationRequest.prototype.setValidTimeS = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    armAuthorizerServerResult: (f = msg.getArmAuthorizerServerResult()) && proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse}
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse;
  return proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse}
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.deserializeBinaryFromReader);
      msg.setArmAuthorizerServerResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArmAuthorizerServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional ArmAuthorizerServerResult arm_authorizer_server_result = 1;
 * @return {?proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult}
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.prototype.getArmAuthorizerServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse} returns this
*/
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.prototype.setArmAuthorizerServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse} returns this
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.prototype.clearArmAuthorizerServerResult = function() {
  return this.setArmAuthorizerServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.arm_authorizer_server.AcceptArmAuthorizationResponse.prototype.hasArmAuthorizerServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    temporarily: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    reason: jspb.Message.getFieldWithDefault(msg, 2, 0),
    extraInfo: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest;
  return proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTemporarily(value);
      break;
    case 2:
      var value = /** @type {!proto.mavsdk.rpc.arm_authorizer_server.RejectionReason} */ (reader.readEnum());
      msg.setReason(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExtraInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTemporarily();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getReason();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getExtraInfo();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional bool temporarily = 1;
 * @return {boolean}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.prototype.getTemporarily = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest} returns this
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.prototype.setTemporarily = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional RejectionReason reason = 2;
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.RejectionReason}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.prototype.getReason = function() {
  return /** @type {!proto.mavsdk.rpc.arm_authorizer_server.RejectionReason} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.RejectionReason} value
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest} returns this
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.prototype.setReason = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 extra_info = 3;
 * @return {number}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.prototype.getExtraInfo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest} returns this
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationRequest.prototype.setExtraInfo = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    armAuthorizerServerResult: (f = msg.getArmAuthorizerServerResult()) && proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse;
  return proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult;
      reader.readMessage(value,proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.deserializeBinaryFromReader);
      msg.setArmAuthorizerServerResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArmAuthorizerServerResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional ArmAuthorizerServerResult arm_authorizer_server_result = 1;
 * @return {?proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.prototype.getArmAuthorizerServerResult = function() {
  return /** @type{?proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult|undefined} value
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse} returns this
*/
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.prototype.setArmAuthorizerServerResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse} returns this
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.prototype.clearArmAuthorizerServerResult = function() {
  return this.setArmAuthorizerServerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectArmAuthorizationResponse.prototype.hasArmAuthorizerServerResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0),
    resultStr: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult}
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult;
  return proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult}
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.Result} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getResultStr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.Result = {
  RESULT_UNKNOWN: 0,
  RESULT_SUCCESS: 1,
  RESULT_FAILED: 2
};

/**
 * optional Result result = 1;
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.Result}
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.prototype.getResult = function() {
  return /** @type {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.Result} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.Result} value
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult} returns this
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string result_str = 2;
 * @return {string}
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.prototype.getResultStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult} returns this
 */
proto.mavsdk.rpc.arm_authorizer_server.ArmAuthorizerServerResult.prototype.setResultStr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.mavsdk.rpc.arm_authorizer_server.RejectionReason = {
  REJECTION_REASON_GENERIC: 0,
  REJECTION_REASON_NONE: 1,
  REJECTION_REASON_INVALID_WAYPOINT: 2,
  REJECTION_REASON_TIMEOUT: 3,
  REJECTION_REASON_AIRSPACE_IN_USE: 4,
  REJECTION_REASON_BAD_WEATHER: 5
};

goog.object.extend(exports, proto.mavsdk.rpc.arm_authorizer_server);


// fix autocompletion
module.exports = exports;
