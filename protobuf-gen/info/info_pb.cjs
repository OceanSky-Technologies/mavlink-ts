/* eslint-disable */

// source: info/info.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var mavsdk_options_pb = require('../mavsdk_options_pb.cjs');
goog.object.extend(proto, mavsdk_options_pb);
goog.exportSymbol('proto.mavsdk.rpc.info.FlightInfo', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.FlightInformationResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.GetFlightInformationRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.GetFlightInformationResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.GetIdentificationRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.GetIdentificationResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.GetProductRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.GetProductResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.GetSpeedFactorRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.GetSpeedFactorResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.GetVersionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.GetVersionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.Identification', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.InfoResult', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.InfoResult.Result', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.Product', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.SubscribeFlightInformationRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.Version', null, global);
goog.exportSymbol('proto.mavsdk.rpc.info.Version.FlightSoftwareVersionType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.GetFlightInformationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.GetFlightInformationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.GetFlightInformationRequest.displayName = 'proto.mavsdk.rpc.info.GetFlightInformationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.GetFlightInformationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.GetFlightInformationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.GetFlightInformationResponse.displayName = 'proto.mavsdk.rpc.info.GetFlightInformationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.GetIdentificationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.GetIdentificationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.GetIdentificationRequest.displayName = 'proto.mavsdk.rpc.info.GetIdentificationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.GetIdentificationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.GetIdentificationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.GetIdentificationResponse.displayName = 'proto.mavsdk.rpc.info.GetIdentificationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.GetProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.GetProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.GetProductRequest.displayName = 'proto.mavsdk.rpc.info.GetProductRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.GetProductResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.GetProductResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.GetProductResponse.displayName = 'proto.mavsdk.rpc.info.GetProductResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.GetVersionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.GetVersionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.GetVersionRequest.displayName = 'proto.mavsdk.rpc.info.GetVersionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.GetVersionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.GetVersionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.GetVersionResponse.displayName = 'proto.mavsdk.rpc.info.GetVersionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.GetSpeedFactorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.GetSpeedFactorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.GetSpeedFactorRequest.displayName = 'proto.mavsdk.rpc.info.GetSpeedFactorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.GetSpeedFactorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.GetSpeedFactorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.GetSpeedFactorResponse.displayName = 'proto.mavsdk.rpc.info.GetSpeedFactorResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.SubscribeFlightInformationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.SubscribeFlightInformationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.SubscribeFlightInformationRequest.displayName = 'proto.mavsdk.rpc.info.SubscribeFlightInformationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.FlightInformationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.FlightInformationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.FlightInformationResponse.displayName = 'proto.mavsdk.rpc.info.FlightInformationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.FlightInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.FlightInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.FlightInfo.displayName = 'proto.mavsdk.rpc.info.FlightInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.Identification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.Identification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.Identification.displayName = 'proto.mavsdk.rpc.info.Identification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.Product = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.Product, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.Product.displayName = 'proto.mavsdk.rpc.info.Product';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.Version = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.Version, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.Version.displayName = 'proto.mavsdk.rpc.info.Version';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.info.InfoResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.info.InfoResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.info.InfoResult.displayName = 'proto.mavsdk.rpc.info.InfoResult';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.GetFlightInformationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.GetFlightInformationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.GetFlightInformationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetFlightInformationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.GetFlightInformationRequest}
 */
proto.mavsdk.rpc.info.GetFlightInformationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.GetFlightInformationRequest;
  return proto.mavsdk.rpc.info.GetFlightInformationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.GetFlightInformationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.GetFlightInformationRequest}
 */
proto.mavsdk.rpc.info.GetFlightInformationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.GetFlightInformationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.GetFlightInformationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.GetFlightInformationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetFlightInformationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.GetFlightInformationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.GetFlightInformationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.GetFlightInformationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetFlightInformationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoResult: (f = msg.getInfoResult()) && proto.mavsdk.rpc.info.InfoResult.toObject(includeInstance, f),
    flightInfo: (f = msg.getFlightInfo()) && proto.mavsdk.rpc.info.FlightInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.GetFlightInformationResponse}
 */
proto.mavsdk.rpc.info.GetFlightInformationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.GetFlightInformationResponse;
  return proto.mavsdk.rpc.info.GetFlightInformationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.GetFlightInformationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.GetFlightInformationResponse}
 */
proto.mavsdk.rpc.info.GetFlightInformationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.info.InfoResult;
      reader.readMessage(value,proto.mavsdk.rpc.info.InfoResult.deserializeBinaryFromReader);
      msg.setInfoResult(value);
      break;
    case 2:
      var value = new proto.mavsdk.rpc.info.FlightInfo;
      reader.readMessage(value,proto.mavsdk.rpc.info.FlightInfo.deserializeBinaryFromReader);
      msg.setFlightInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.GetFlightInformationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.GetFlightInformationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.GetFlightInformationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetFlightInformationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.info.InfoResult.serializeBinaryToWriter
    );
  }
  f = message.getFlightInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mavsdk.rpc.info.FlightInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional InfoResult info_result = 1;
 * @return {?proto.mavsdk.rpc.info.InfoResult}
 */
proto.mavsdk.rpc.info.GetFlightInformationResponse.prototype.getInfoResult = function() {
  return /** @type{?proto.mavsdk.rpc.info.InfoResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.info.InfoResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.info.InfoResult|undefined} value
 * @return {!proto.mavsdk.rpc.info.GetFlightInformationResponse} returns this
*/
proto.mavsdk.rpc.info.GetFlightInformationResponse.prototype.setInfoResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.info.GetFlightInformationResponse} returns this
 */
proto.mavsdk.rpc.info.GetFlightInformationResponse.prototype.clearInfoResult = function() {
  return this.setInfoResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.info.GetFlightInformationResponse.prototype.hasInfoResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FlightInfo flight_info = 2;
 * @return {?proto.mavsdk.rpc.info.FlightInfo}
 */
proto.mavsdk.rpc.info.GetFlightInformationResponse.prototype.getFlightInfo = function() {
  return /** @type{?proto.mavsdk.rpc.info.FlightInfo} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.info.FlightInfo, 2));
};


/**
 * @param {?proto.mavsdk.rpc.info.FlightInfo|undefined} value
 * @return {!proto.mavsdk.rpc.info.GetFlightInformationResponse} returns this
*/
proto.mavsdk.rpc.info.GetFlightInformationResponse.prototype.setFlightInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.info.GetFlightInformationResponse} returns this
 */
proto.mavsdk.rpc.info.GetFlightInformationResponse.prototype.clearFlightInfo = function() {
  return this.setFlightInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.info.GetFlightInformationResponse.prototype.hasFlightInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.GetIdentificationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.GetIdentificationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.GetIdentificationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetIdentificationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.GetIdentificationRequest}
 */
proto.mavsdk.rpc.info.GetIdentificationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.GetIdentificationRequest;
  return proto.mavsdk.rpc.info.GetIdentificationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.GetIdentificationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.GetIdentificationRequest}
 */
proto.mavsdk.rpc.info.GetIdentificationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.GetIdentificationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.GetIdentificationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.GetIdentificationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetIdentificationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.GetIdentificationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.GetIdentificationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.GetIdentificationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetIdentificationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoResult: (f = msg.getInfoResult()) && proto.mavsdk.rpc.info.InfoResult.toObject(includeInstance, f),
    identification: (f = msg.getIdentification()) && proto.mavsdk.rpc.info.Identification.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.GetIdentificationResponse}
 */
proto.mavsdk.rpc.info.GetIdentificationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.GetIdentificationResponse;
  return proto.mavsdk.rpc.info.GetIdentificationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.GetIdentificationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.GetIdentificationResponse}
 */
proto.mavsdk.rpc.info.GetIdentificationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.info.InfoResult;
      reader.readMessage(value,proto.mavsdk.rpc.info.InfoResult.deserializeBinaryFromReader);
      msg.setInfoResult(value);
      break;
    case 2:
      var value = new proto.mavsdk.rpc.info.Identification;
      reader.readMessage(value,proto.mavsdk.rpc.info.Identification.deserializeBinaryFromReader);
      msg.setIdentification(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.GetIdentificationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.GetIdentificationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.GetIdentificationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetIdentificationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.info.InfoResult.serializeBinaryToWriter
    );
  }
  f = message.getIdentification();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mavsdk.rpc.info.Identification.serializeBinaryToWriter
    );
  }
};


/**
 * optional InfoResult info_result = 1;
 * @return {?proto.mavsdk.rpc.info.InfoResult}
 */
proto.mavsdk.rpc.info.GetIdentificationResponse.prototype.getInfoResult = function() {
  return /** @type{?proto.mavsdk.rpc.info.InfoResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.info.InfoResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.info.InfoResult|undefined} value
 * @return {!proto.mavsdk.rpc.info.GetIdentificationResponse} returns this
*/
proto.mavsdk.rpc.info.GetIdentificationResponse.prototype.setInfoResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.info.GetIdentificationResponse} returns this
 */
proto.mavsdk.rpc.info.GetIdentificationResponse.prototype.clearInfoResult = function() {
  return this.setInfoResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.info.GetIdentificationResponse.prototype.hasInfoResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Identification identification = 2;
 * @return {?proto.mavsdk.rpc.info.Identification}
 */
proto.mavsdk.rpc.info.GetIdentificationResponse.prototype.getIdentification = function() {
  return /** @type{?proto.mavsdk.rpc.info.Identification} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.info.Identification, 2));
};


/**
 * @param {?proto.mavsdk.rpc.info.Identification|undefined} value
 * @return {!proto.mavsdk.rpc.info.GetIdentificationResponse} returns this
*/
proto.mavsdk.rpc.info.GetIdentificationResponse.prototype.setIdentification = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.info.GetIdentificationResponse} returns this
 */
proto.mavsdk.rpc.info.GetIdentificationResponse.prototype.clearIdentification = function() {
  return this.setIdentification(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.info.GetIdentificationResponse.prototype.hasIdentification = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.GetProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.GetProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.GetProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.GetProductRequest}
 */
proto.mavsdk.rpc.info.GetProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.GetProductRequest;
  return proto.mavsdk.rpc.info.GetProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.GetProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.GetProductRequest}
 */
proto.mavsdk.rpc.info.GetProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.GetProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.GetProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.GetProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.GetProductResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.GetProductResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.GetProductResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetProductResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoResult: (f = msg.getInfoResult()) && proto.mavsdk.rpc.info.InfoResult.toObject(includeInstance, f),
    product: (f = msg.getProduct()) && proto.mavsdk.rpc.info.Product.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.GetProductResponse}
 */
proto.mavsdk.rpc.info.GetProductResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.GetProductResponse;
  return proto.mavsdk.rpc.info.GetProductResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.GetProductResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.GetProductResponse}
 */
proto.mavsdk.rpc.info.GetProductResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.info.InfoResult;
      reader.readMessage(value,proto.mavsdk.rpc.info.InfoResult.deserializeBinaryFromReader);
      msg.setInfoResult(value);
      break;
    case 2:
      var value = new proto.mavsdk.rpc.info.Product;
      reader.readMessage(value,proto.mavsdk.rpc.info.Product.deserializeBinaryFromReader);
      msg.setProduct(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.GetProductResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.GetProductResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.GetProductResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetProductResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.info.InfoResult.serializeBinaryToWriter
    );
  }
  f = message.getProduct();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mavsdk.rpc.info.Product.serializeBinaryToWriter
    );
  }
};


/**
 * optional InfoResult info_result = 1;
 * @return {?proto.mavsdk.rpc.info.InfoResult}
 */
proto.mavsdk.rpc.info.GetProductResponse.prototype.getInfoResult = function() {
  return /** @type{?proto.mavsdk.rpc.info.InfoResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.info.InfoResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.info.InfoResult|undefined} value
 * @return {!proto.mavsdk.rpc.info.GetProductResponse} returns this
*/
proto.mavsdk.rpc.info.GetProductResponse.prototype.setInfoResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.info.GetProductResponse} returns this
 */
proto.mavsdk.rpc.info.GetProductResponse.prototype.clearInfoResult = function() {
  return this.setInfoResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.info.GetProductResponse.prototype.hasInfoResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Product product = 2;
 * @return {?proto.mavsdk.rpc.info.Product}
 */
proto.mavsdk.rpc.info.GetProductResponse.prototype.getProduct = function() {
  return /** @type{?proto.mavsdk.rpc.info.Product} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.info.Product, 2));
};


/**
 * @param {?proto.mavsdk.rpc.info.Product|undefined} value
 * @return {!proto.mavsdk.rpc.info.GetProductResponse} returns this
*/
proto.mavsdk.rpc.info.GetProductResponse.prototype.setProduct = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.info.GetProductResponse} returns this
 */
proto.mavsdk.rpc.info.GetProductResponse.prototype.clearProduct = function() {
  return this.setProduct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.info.GetProductResponse.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.GetVersionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.GetVersionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.GetVersionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetVersionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.GetVersionRequest}
 */
proto.mavsdk.rpc.info.GetVersionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.GetVersionRequest;
  return proto.mavsdk.rpc.info.GetVersionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.GetVersionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.GetVersionRequest}
 */
proto.mavsdk.rpc.info.GetVersionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.GetVersionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.GetVersionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.GetVersionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetVersionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.GetVersionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.GetVersionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.GetVersionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetVersionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoResult: (f = msg.getInfoResult()) && proto.mavsdk.rpc.info.InfoResult.toObject(includeInstance, f),
    version: (f = msg.getVersion()) && proto.mavsdk.rpc.info.Version.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.GetVersionResponse}
 */
proto.mavsdk.rpc.info.GetVersionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.GetVersionResponse;
  return proto.mavsdk.rpc.info.GetVersionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.GetVersionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.GetVersionResponse}
 */
proto.mavsdk.rpc.info.GetVersionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.info.InfoResult;
      reader.readMessage(value,proto.mavsdk.rpc.info.InfoResult.deserializeBinaryFromReader);
      msg.setInfoResult(value);
      break;
    case 2:
      var value = new proto.mavsdk.rpc.info.Version;
      reader.readMessage(value,proto.mavsdk.rpc.info.Version.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.GetVersionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.GetVersionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.GetVersionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetVersionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.info.InfoResult.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mavsdk.rpc.info.Version.serializeBinaryToWriter
    );
  }
};


/**
 * optional InfoResult info_result = 1;
 * @return {?proto.mavsdk.rpc.info.InfoResult}
 */
proto.mavsdk.rpc.info.GetVersionResponse.prototype.getInfoResult = function() {
  return /** @type{?proto.mavsdk.rpc.info.InfoResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.info.InfoResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.info.InfoResult|undefined} value
 * @return {!proto.mavsdk.rpc.info.GetVersionResponse} returns this
*/
proto.mavsdk.rpc.info.GetVersionResponse.prototype.setInfoResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.info.GetVersionResponse} returns this
 */
proto.mavsdk.rpc.info.GetVersionResponse.prototype.clearInfoResult = function() {
  return this.setInfoResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.info.GetVersionResponse.prototype.hasInfoResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Version version = 2;
 * @return {?proto.mavsdk.rpc.info.Version}
 */
proto.mavsdk.rpc.info.GetVersionResponse.prototype.getVersion = function() {
  return /** @type{?proto.mavsdk.rpc.info.Version} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.info.Version, 2));
};


/**
 * @param {?proto.mavsdk.rpc.info.Version|undefined} value
 * @return {!proto.mavsdk.rpc.info.GetVersionResponse} returns this
*/
proto.mavsdk.rpc.info.GetVersionResponse.prototype.setVersion = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.info.GetVersionResponse} returns this
 */
proto.mavsdk.rpc.info.GetVersionResponse.prototype.clearVersion = function() {
  return this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.info.GetVersionResponse.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.GetSpeedFactorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.GetSpeedFactorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.GetSpeedFactorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetSpeedFactorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.GetSpeedFactorRequest}
 */
proto.mavsdk.rpc.info.GetSpeedFactorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.GetSpeedFactorRequest;
  return proto.mavsdk.rpc.info.GetSpeedFactorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.GetSpeedFactorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.GetSpeedFactorRequest}
 */
proto.mavsdk.rpc.info.GetSpeedFactorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.GetSpeedFactorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.GetSpeedFactorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.GetSpeedFactorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetSpeedFactorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.GetSpeedFactorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.GetSpeedFactorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.GetSpeedFactorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetSpeedFactorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoResult: (f = msg.getInfoResult()) && proto.mavsdk.rpc.info.InfoResult.toObject(includeInstance, f),
    speedFactor: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.GetSpeedFactorResponse}
 */
proto.mavsdk.rpc.info.GetSpeedFactorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.GetSpeedFactorResponse;
  return proto.mavsdk.rpc.info.GetSpeedFactorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.GetSpeedFactorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.GetSpeedFactorResponse}
 */
proto.mavsdk.rpc.info.GetSpeedFactorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.info.InfoResult;
      reader.readMessage(value,proto.mavsdk.rpc.info.InfoResult.deserializeBinaryFromReader);
      msg.setInfoResult(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSpeedFactor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.GetSpeedFactorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.GetSpeedFactorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.GetSpeedFactorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.GetSpeedFactorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.info.InfoResult.serializeBinaryToWriter
    );
  }
  f = message.getSpeedFactor();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional InfoResult info_result = 1;
 * @return {?proto.mavsdk.rpc.info.InfoResult}
 */
proto.mavsdk.rpc.info.GetSpeedFactorResponse.prototype.getInfoResult = function() {
  return /** @type{?proto.mavsdk.rpc.info.InfoResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.info.InfoResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.info.InfoResult|undefined} value
 * @return {!proto.mavsdk.rpc.info.GetSpeedFactorResponse} returns this
*/
proto.mavsdk.rpc.info.GetSpeedFactorResponse.prototype.setInfoResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.info.GetSpeedFactorResponse} returns this
 */
proto.mavsdk.rpc.info.GetSpeedFactorResponse.prototype.clearInfoResult = function() {
  return this.setInfoResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.info.GetSpeedFactorResponse.prototype.hasInfoResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double speed_factor = 2;
 * @return {number}
 */
proto.mavsdk.rpc.info.GetSpeedFactorResponse.prototype.getSpeedFactor = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.GetSpeedFactorResponse} returns this
 */
proto.mavsdk.rpc.info.GetSpeedFactorResponse.prototype.setSpeedFactor = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.SubscribeFlightInformationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.SubscribeFlightInformationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.SubscribeFlightInformationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.SubscribeFlightInformationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.SubscribeFlightInformationRequest}
 */
proto.mavsdk.rpc.info.SubscribeFlightInformationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.SubscribeFlightInformationRequest;
  return proto.mavsdk.rpc.info.SubscribeFlightInformationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.SubscribeFlightInformationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.SubscribeFlightInformationRequest}
 */
proto.mavsdk.rpc.info.SubscribeFlightInformationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.SubscribeFlightInformationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.SubscribeFlightInformationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.SubscribeFlightInformationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.SubscribeFlightInformationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.FlightInformationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.FlightInformationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.FlightInformationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.FlightInformationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    flightInfo: (f = msg.getFlightInfo()) && proto.mavsdk.rpc.info.FlightInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.FlightInformationResponse}
 */
proto.mavsdk.rpc.info.FlightInformationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.FlightInformationResponse;
  return proto.mavsdk.rpc.info.FlightInformationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.FlightInformationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.FlightInformationResponse}
 */
proto.mavsdk.rpc.info.FlightInformationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.info.FlightInfo;
      reader.readMessage(value,proto.mavsdk.rpc.info.FlightInfo.deserializeBinaryFromReader);
      msg.setFlightInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.FlightInformationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.FlightInformationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.FlightInformationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.FlightInformationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFlightInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.info.FlightInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional FlightInfo flight_info = 1;
 * @return {?proto.mavsdk.rpc.info.FlightInfo}
 */
proto.mavsdk.rpc.info.FlightInformationResponse.prototype.getFlightInfo = function() {
  return /** @type{?proto.mavsdk.rpc.info.FlightInfo} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.info.FlightInfo, 1));
};


/**
 * @param {?proto.mavsdk.rpc.info.FlightInfo|undefined} value
 * @return {!proto.mavsdk.rpc.info.FlightInformationResponse} returns this
*/
proto.mavsdk.rpc.info.FlightInformationResponse.prototype.setFlightInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.info.FlightInformationResponse} returns this
 */
proto.mavsdk.rpc.info.FlightInformationResponse.prototype.clearFlightInfo = function() {
  return this.setFlightInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.info.FlightInformationResponse.prototype.hasFlightInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.FlightInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.FlightInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.FlightInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.FlightInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeBootMs: jspb.Message.getFieldWithDefault(msg, 1, 0),
    flightUid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    durationSinceArmingMs: jspb.Message.getFieldWithDefault(msg, 3, 0),
    durationSinceTakeoffMs: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.FlightInfo}
 */
proto.mavsdk.rpc.info.FlightInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.FlightInfo;
  return proto.mavsdk.rpc.info.FlightInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.FlightInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.FlightInfo}
 */
proto.mavsdk.rpc.info.FlightInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeBootMs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFlightUid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDurationSinceArmingMs(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDurationSinceTakeoffMs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.FlightInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.FlightInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.FlightInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.FlightInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeBootMs();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getFlightUid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getDurationSinceArmingMs();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getDurationSinceTakeoffMs();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional uint32 time_boot_ms = 1;
 * @return {number}
 */
proto.mavsdk.rpc.info.FlightInfo.prototype.getTimeBootMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.FlightInfo} returns this
 */
proto.mavsdk.rpc.info.FlightInfo.prototype.setTimeBootMs = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 flight_uid = 2;
 * @return {number}
 */
proto.mavsdk.rpc.info.FlightInfo.prototype.getFlightUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.FlightInfo} returns this
 */
proto.mavsdk.rpc.info.FlightInfo.prototype.setFlightUid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 duration_since_arming_ms = 3;
 * @return {number}
 */
proto.mavsdk.rpc.info.FlightInfo.prototype.getDurationSinceArmingMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.FlightInfo} returns this
 */
proto.mavsdk.rpc.info.FlightInfo.prototype.setDurationSinceArmingMs = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 duration_since_takeoff_ms = 4;
 * @return {number}
 */
proto.mavsdk.rpc.info.FlightInfo.prototype.getDurationSinceTakeoffMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.FlightInfo} returns this
 */
proto.mavsdk.rpc.info.FlightInfo.prototype.setDurationSinceTakeoffMs = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.Identification.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.Identification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.Identification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.Identification.toObject = function(includeInstance, msg) {
  var f, obj = {
    hardwareUid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    legacyUid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.Identification}
 */
proto.mavsdk.rpc.info.Identification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.Identification;
  return proto.mavsdk.rpc.info.Identification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.Identification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.Identification}
 */
proto.mavsdk.rpc.info.Identification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHardwareUid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLegacyUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.Identification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.Identification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.Identification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.Identification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHardwareUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLegacyUid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string hardware_uid = 1;
 * @return {string}
 */
proto.mavsdk.rpc.info.Identification.prototype.getHardwareUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.info.Identification} returns this
 */
proto.mavsdk.rpc.info.Identification.prototype.setHardwareUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 legacy_uid = 2;
 * @return {number}
 */
proto.mavsdk.rpc.info.Identification.prototype.getLegacyUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.Identification} returns this
 */
proto.mavsdk.rpc.info.Identification.prototype.setLegacyUid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.Product.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.Product.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.Product} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.Product.toObject = function(includeInstance, msg) {
  var f, obj = {
    vendorId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    vendorName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    productId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    productName: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.Product}
 */
proto.mavsdk.rpc.info.Product.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.Product;
  return proto.mavsdk.rpc.info.Product.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.Product} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.Product}
 */
proto.mavsdk.rpc.info.Product.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVendorId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendorName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProductId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.Product.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.Product.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.Product} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.Product.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVendorId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVendorName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProductId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getProductName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 vendor_id = 1;
 * @return {number}
 */
proto.mavsdk.rpc.info.Product.prototype.getVendorId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.Product} returns this
 */
proto.mavsdk.rpc.info.Product.prototype.setVendorId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string vendor_name = 2;
 * @return {string}
 */
proto.mavsdk.rpc.info.Product.prototype.getVendorName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.info.Product} returns this
 */
proto.mavsdk.rpc.info.Product.prototype.setVendorName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 product_id = 3;
 * @return {number}
 */
proto.mavsdk.rpc.info.Product.prototype.getProductId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.Product} returns this
 */
proto.mavsdk.rpc.info.Product.prototype.setProductId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string product_name = 4;
 * @return {string}
 */
proto.mavsdk.rpc.info.Product.prototype.getProductName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.info.Product} returns this
 */
proto.mavsdk.rpc.info.Product.prototype.setProductName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.Version.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.Version.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.Version} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.Version.toObject = function(includeInstance, msg) {
  var f, obj = {
    flightSwMajor: jspb.Message.getFieldWithDefault(msg, 1, 0),
    flightSwMinor: jspb.Message.getFieldWithDefault(msg, 2, 0),
    flightSwPatch: jspb.Message.getFieldWithDefault(msg, 3, 0),
    flightSwVendorMajor: jspb.Message.getFieldWithDefault(msg, 4, 0),
    flightSwVendorMinor: jspb.Message.getFieldWithDefault(msg, 5, 0),
    flightSwVendorPatch: jspb.Message.getFieldWithDefault(msg, 6, 0),
    osSwMajor: jspb.Message.getFieldWithDefault(msg, 7, 0),
    osSwMinor: jspb.Message.getFieldWithDefault(msg, 8, 0),
    osSwPatch: jspb.Message.getFieldWithDefault(msg, 9, 0),
    flightSwGitHash: jspb.Message.getFieldWithDefault(msg, 10, ""),
    osSwGitHash: jspb.Message.getFieldWithDefault(msg, 11, ""),
    flightSwVersionType: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.Version}
 */
proto.mavsdk.rpc.info.Version.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.Version;
  return proto.mavsdk.rpc.info.Version.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.Version} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.Version}
 */
proto.mavsdk.rpc.info.Version.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlightSwMajor(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlightSwMinor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlightSwPatch(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlightSwVendorMajor(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlightSwVendorMinor(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlightSwVendorPatch(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOsSwMajor(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOsSwMinor(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOsSwPatch(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlightSwGitHash(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setOsSwGitHash(value);
      break;
    case 12:
      var value = /** @type {!proto.mavsdk.rpc.info.Version.FlightSoftwareVersionType} */ (reader.readEnum());
      msg.setFlightSwVersionType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.Version.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.Version.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.Version} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.Version.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFlightSwMajor();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFlightSwMinor();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFlightSwPatch();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFlightSwVendorMajor();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getFlightSwVendorMinor();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getFlightSwVendorPatch();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getOsSwMajor();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getOsSwMinor();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getOsSwPatch();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getFlightSwGitHash();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getOsSwGitHash();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getFlightSwVersionType();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mavsdk.rpc.info.Version.FlightSoftwareVersionType = {
  FLIGHT_SOFTWARE_VERSION_TYPE_UNKNOWN: 0,
  FLIGHT_SOFTWARE_VERSION_TYPE_DEV: 1,
  FLIGHT_SOFTWARE_VERSION_TYPE_ALPHA: 2,
  FLIGHT_SOFTWARE_VERSION_TYPE_BETA: 3,
  FLIGHT_SOFTWARE_VERSION_TYPE_RC: 4,
  FLIGHT_SOFTWARE_VERSION_TYPE_RELEASE: 5
};

/**
 * optional int32 flight_sw_major = 1;
 * @return {number}
 */
proto.mavsdk.rpc.info.Version.prototype.getFlightSwMajor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.Version} returns this
 */
proto.mavsdk.rpc.info.Version.prototype.setFlightSwMajor = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 flight_sw_minor = 2;
 * @return {number}
 */
proto.mavsdk.rpc.info.Version.prototype.getFlightSwMinor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.Version} returns this
 */
proto.mavsdk.rpc.info.Version.prototype.setFlightSwMinor = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 flight_sw_patch = 3;
 * @return {number}
 */
proto.mavsdk.rpc.info.Version.prototype.getFlightSwPatch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.Version} returns this
 */
proto.mavsdk.rpc.info.Version.prototype.setFlightSwPatch = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 flight_sw_vendor_major = 4;
 * @return {number}
 */
proto.mavsdk.rpc.info.Version.prototype.getFlightSwVendorMajor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.Version} returns this
 */
proto.mavsdk.rpc.info.Version.prototype.setFlightSwVendorMajor = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 flight_sw_vendor_minor = 5;
 * @return {number}
 */
proto.mavsdk.rpc.info.Version.prototype.getFlightSwVendorMinor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.Version} returns this
 */
proto.mavsdk.rpc.info.Version.prototype.setFlightSwVendorMinor = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 flight_sw_vendor_patch = 6;
 * @return {number}
 */
proto.mavsdk.rpc.info.Version.prototype.getFlightSwVendorPatch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.Version} returns this
 */
proto.mavsdk.rpc.info.Version.prototype.setFlightSwVendorPatch = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 os_sw_major = 7;
 * @return {number}
 */
proto.mavsdk.rpc.info.Version.prototype.getOsSwMajor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.Version} returns this
 */
proto.mavsdk.rpc.info.Version.prototype.setOsSwMajor = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 os_sw_minor = 8;
 * @return {number}
 */
proto.mavsdk.rpc.info.Version.prototype.getOsSwMinor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.Version} returns this
 */
proto.mavsdk.rpc.info.Version.prototype.setOsSwMinor = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 os_sw_patch = 9;
 * @return {number}
 */
proto.mavsdk.rpc.info.Version.prototype.getOsSwPatch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.info.Version} returns this
 */
proto.mavsdk.rpc.info.Version.prototype.setOsSwPatch = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string flight_sw_git_hash = 10;
 * @return {string}
 */
proto.mavsdk.rpc.info.Version.prototype.getFlightSwGitHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.info.Version} returns this
 */
proto.mavsdk.rpc.info.Version.prototype.setFlightSwGitHash = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string os_sw_git_hash = 11;
 * @return {string}
 */
proto.mavsdk.rpc.info.Version.prototype.getOsSwGitHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.info.Version} returns this
 */
proto.mavsdk.rpc.info.Version.prototype.setOsSwGitHash = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional FlightSoftwareVersionType flight_sw_version_type = 12;
 * @return {!proto.mavsdk.rpc.info.Version.FlightSoftwareVersionType}
 */
proto.mavsdk.rpc.info.Version.prototype.getFlightSwVersionType = function() {
  return /** @type {!proto.mavsdk.rpc.info.Version.FlightSoftwareVersionType} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.mavsdk.rpc.info.Version.FlightSoftwareVersionType} value
 * @return {!proto.mavsdk.rpc.info.Version} returns this
 */
proto.mavsdk.rpc.info.Version.prototype.setFlightSwVersionType = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.info.InfoResult.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.info.InfoResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.info.InfoResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.InfoResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0),
    resultStr: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.info.InfoResult}
 */
proto.mavsdk.rpc.info.InfoResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.info.InfoResult;
  return proto.mavsdk.rpc.info.InfoResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.info.InfoResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.info.InfoResult}
 */
proto.mavsdk.rpc.info.InfoResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mavsdk.rpc.info.InfoResult.Result} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.info.InfoResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.info.InfoResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.info.InfoResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.info.InfoResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getResultStr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mavsdk.rpc.info.InfoResult.Result = {
  RESULT_UNKNOWN: 0,
  RESULT_SUCCESS: 1,
  RESULT_INFORMATION_NOT_RECEIVED_YET: 2,
  RESULT_NO_SYSTEM: 3
};

/**
 * optional Result result = 1;
 * @return {!proto.mavsdk.rpc.info.InfoResult.Result}
 */
proto.mavsdk.rpc.info.InfoResult.prototype.getResult = function() {
  return /** @type {!proto.mavsdk.rpc.info.InfoResult.Result} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mavsdk.rpc.info.InfoResult.Result} value
 * @return {!proto.mavsdk.rpc.info.InfoResult} returns this
 */
proto.mavsdk.rpc.info.InfoResult.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string result_str = 2;
 * @return {string}
 */
proto.mavsdk.rpc.info.InfoResult.prototype.getResultStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.info.InfoResult} returns this
 */
proto.mavsdk.rpc.info.InfoResult.prototype.setResultStr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.mavsdk.rpc.info);


// fix autocompletion
module.exports = exports;
