/* eslint-disable */

// source: mission/mission.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var mavsdk_options_pb = require('../mavsdk_options_pb.cjs');
goog.object.extend(proto, mavsdk_options_pb);
goog.exportSymbol('proto.mavsdk.rpc.mission.CancelMissionDownloadRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.CancelMissionDownloadResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.CancelMissionUploadRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.CancelMissionUploadResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.ClearMissionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.ClearMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.DownloadMissionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.DownloadMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.IsMissionFinishedRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.IsMissionFinishedResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.MissionItem', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.MissionItem.CameraAction', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.MissionItem.VehicleAction', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.MissionPlan', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.MissionProgress', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.MissionProgressResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.MissionResult', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.MissionResult.Result', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.PauseMissionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.PauseMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.ProgressData', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.ProgressDataOrMission', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.StartMissionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.StartMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.UploadMissionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.UploadMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.UploadMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.UploadMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.UploadMissionRequest.displayName = 'proto.mavsdk.rpc.mission.UploadMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.UploadMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.UploadMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.UploadMissionResponse.displayName = 'proto.mavsdk.rpc.mission.UploadMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.displayName = 'proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.displayName = 'proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.CancelMissionUploadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.CancelMissionUploadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.CancelMissionUploadRequest.displayName = 'proto.mavsdk.rpc.mission.CancelMissionUploadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.CancelMissionUploadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.CancelMissionUploadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.CancelMissionUploadResponse.displayName = 'proto.mavsdk.rpc.mission.CancelMissionUploadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.DownloadMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.DownloadMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.DownloadMissionRequest.displayName = 'proto.mavsdk.rpc.mission.DownloadMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.DownloadMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.DownloadMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.DownloadMissionResponse.displayName = 'proto.mavsdk.rpc.mission.DownloadMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest.displayName = 'proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.displayName = 'proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.CancelMissionDownloadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.CancelMissionDownloadRequest.displayName = 'proto.mavsdk.rpc.mission.CancelMissionDownloadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.CancelMissionDownloadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.displayName = 'proto.mavsdk.rpc.mission.CancelMissionDownloadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.StartMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.StartMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.StartMissionRequest.displayName = 'proto.mavsdk.rpc.mission.StartMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.StartMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.StartMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.StartMissionResponse.displayName = 'proto.mavsdk.rpc.mission.StartMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.PauseMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.PauseMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.PauseMissionRequest.displayName = 'proto.mavsdk.rpc.mission.PauseMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.PauseMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.PauseMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.PauseMissionResponse.displayName = 'proto.mavsdk.rpc.mission.PauseMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.ClearMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.ClearMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.ClearMissionRequest.displayName = 'proto.mavsdk.rpc.mission.ClearMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.ClearMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.ClearMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.ClearMissionResponse.displayName = 'proto.mavsdk.rpc.mission.ClearMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest.displayName = 'proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.displayName = 'proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.IsMissionFinishedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.IsMissionFinishedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.IsMissionFinishedRequest.displayName = 'proto.mavsdk.rpc.mission.IsMissionFinishedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.IsMissionFinishedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.IsMissionFinishedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.IsMissionFinishedResponse.displayName = 'proto.mavsdk.rpc.mission.IsMissionFinishedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest.displayName = 'proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.MissionProgressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.MissionProgressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.MissionProgressResponse.displayName = 'proto.mavsdk.rpc.mission.MissionProgressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest.displayName = 'proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.displayName = 'proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest.displayName = 'proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.displayName = 'proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.MissionItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.MissionItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.MissionItem.displayName = 'proto.mavsdk.rpc.mission.MissionItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.MissionPlan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mavsdk.rpc.mission.MissionPlan.repeatedFields_, null);
};
goog.inherits(proto.mavsdk.rpc.mission.MissionPlan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.MissionPlan.displayName = 'proto.mavsdk.rpc.mission.MissionPlan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.MissionProgress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.MissionProgress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.MissionProgress.displayName = 'proto.mavsdk.rpc.mission.MissionProgress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.MissionResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.MissionResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.MissionResult.displayName = 'proto.mavsdk.rpc.mission.MissionResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.ProgressData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.ProgressData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.ProgressData.displayName = 'proto.mavsdk.rpc.mission.ProgressData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission.ProgressDataOrMission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission.ProgressDataOrMission.displayName = 'proto.mavsdk.rpc.mission.ProgressDataOrMission';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.UploadMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.UploadMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.UploadMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.UploadMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionPlan: (f = msg.getMissionPlan()) && proto.mavsdk.rpc.mission.MissionPlan.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.UploadMissionRequest}
 */
proto.mavsdk.rpc.mission.UploadMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.UploadMissionRequest;
  return proto.mavsdk.rpc.mission.UploadMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.UploadMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.UploadMissionRequest}
 */
proto.mavsdk.rpc.mission.UploadMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionPlan;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionPlan.deserializeBinaryFromReader);
      msg.setMissionPlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.UploadMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.UploadMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.UploadMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.UploadMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionPlan();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionPlan.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionPlan mission_plan = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionPlan}
 */
proto.mavsdk.rpc.mission.UploadMissionRequest.prototype.getMissionPlan = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionPlan} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionPlan, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionPlan|undefined} value
 * @return {!proto.mavsdk.rpc.mission.UploadMissionRequest} returns this
*/
proto.mavsdk.rpc.mission.UploadMissionRequest.prototype.setMissionPlan = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.UploadMissionRequest} returns this
 */
proto.mavsdk.rpc.mission.UploadMissionRequest.prototype.clearMissionPlan = function() {
  return this.setMissionPlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.UploadMissionRequest.prototype.hasMissionPlan = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.UploadMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.UploadMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.UploadMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.UploadMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionResult: (f = msg.getMissionResult()) && proto.mavsdk.rpc.mission.MissionResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.UploadMissionResponse}
 */
proto.mavsdk.rpc.mission.UploadMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.UploadMissionResponse;
  return proto.mavsdk.rpc.mission.UploadMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.UploadMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.UploadMissionResponse}
 */
proto.mavsdk.rpc.mission.UploadMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader);
      msg.setMissionResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.UploadMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.UploadMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.UploadMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.UploadMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionResult mission_result = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.UploadMissionResponse.prototype.getMissionResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission.UploadMissionResponse} returns this
*/
proto.mavsdk.rpc.mission.UploadMissionResponse.prototype.setMissionResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.UploadMissionResponse} returns this
 */
proto.mavsdk.rpc.mission.UploadMissionResponse.prototype.clearMissionResult = function() {
  return this.setMissionResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.UploadMissionResponse.prototype.hasMissionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionPlan: (f = msg.getMissionPlan()) && proto.mavsdk.rpc.mission.MissionPlan.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest}
 */
proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest;
  return proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest}
 */
proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionPlan;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionPlan.deserializeBinaryFromReader);
      msg.setMissionPlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionPlan();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionPlan.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionPlan mission_plan = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionPlan}
 */
proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.prototype.getMissionPlan = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionPlan} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionPlan, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionPlan|undefined} value
 * @return {!proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest} returns this
*/
proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.prototype.setMissionPlan = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest} returns this
 */
proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.prototype.clearMissionPlan = function() {
  return this.setMissionPlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.SubscribeUploadMissionWithProgressRequest.prototype.hasMissionPlan = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionResult: (f = msg.getMissionResult()) && proto.mavsdk.rpc.mission.MissionResult.toObject(includeInstance, f),
    progressData: (f = msg.getProgressData()) && proto.mavsdk.rpc.mission.ProgressData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse}
 */
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse;
  return proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse}
 */
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader);
      msg.setMissionResult(value);
      break;
    case 2:
      var value = new proto.mavsdk.rpc.mission.ProgressData;
      reader.readMessage(value,proto.mavsdk.rpc.mission.ProgressData.deserializeBinaryFromReader);
      msg.setProgressData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter
    );
  }
  f = message.getProgressData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mavsdk.rpc.mission.ProgressData.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionResult mission_result = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.prototype.getMissionResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse} returns this
*/
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.prototype.setMissionResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse} returns this
 */
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.prototype.clearMissionResult = function() {
  return this.setMissionResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.prototype.hasMissionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProgressData progress_data = 2;
 * @return {?proto.mavsdk.rpc.mission.ProgressData}
 */
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.prototype.getProgressData = function() {
  return /** @type{?proto.mavsdk.rpc.mission.ProgressData} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.ProgressData, 2));
};


/**
 * @param {?proto.mavsdk.rpc.mission.ProgressData|undefined} value
 * @return {!proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse} returns this
*/
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.prototype.setProgressData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse} returns this
 */
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.prototype.clearProgressData = function() {
  return this.setProgressData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.UploadMissionWithProgressResponse.prototype.hasProgressData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.CancelMissionUploadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.CancelMissionUploadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.CancelMissionUploadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.CancelMissionUploadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.CancelMissionUploadRequest}
 */
proto.mavsdk.rpc.mission.CancelMissionUploadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.CancelMissionUploadRequest;
  return proto.mavsdk.rpc.mission.CancelMissionUploadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.CancelMissionUploadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.CancelMissionUploadRequest}
 */
proto.mavsdk.rpc.mission.CancelMissionUploadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.CancelMissionUploadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.CancelMissionUploadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.CancelMissionUploadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.CancelMissionUploadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.CancelMissionUploadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.CancelMissionUploadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.CancelMissionUploadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.CancelMissionUploadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionResult: (f = msg.getMissionResult()) && proto.mavsdk.rpc.mission.MissionResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.CancelMissionUploadResponse}
 */
proto.mavsdk.rpc.mission.CancelMissionUploadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.CancelMissionUploadResponse;
  return proto.mavsdk.rpc.mission.CancelMissionUploadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.CancelMissionUploadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.CancelMissionUploadResponse}
 */
proto.mavsdk.rpc.mission.CancelMissionUploadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader);
      msg.setMissionResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.CancelMissionUploadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.CancelMissionUploadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.CancelMissionUploadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.CancelMissionUploadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionResult mission_result = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.CancelMissionUploadResponse.prototype.getMissionResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission.CancelMissionUploadResponse} returns this
*/
proto.mavsdk.rpc.mission.CancelMissionUploadResponse.prototype.setMissionResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.CancelMissionUploadResponse} returns this
 */
proto.mavsdk.rpc.mission.CancelMissionUploadResponse.prototype.clearMissionResult = function() {
  return this.setMissionResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.CancelMissionUploadResponse.prototype.hasMissionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.DownloadMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.DownloadMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.DownloadMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.DownloadMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionRequest}
 */
proto.mavsdk.rpc.mission.DownloadMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.DownloadMissionRequest;
  return proto.mavsdk.rpc.mission.DownloadMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.DownloadMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionRequest}
 */
proto.mavsdk.rpc.mission.DownloadMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.DownloadMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.DownloadMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.DownloadMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.DownloadMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.DownloadMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.DownloadMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.DownloadMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.DownloadMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionResult: (f = msg.getMissionResult()) && proto.mavsdk.rpc.mission.MissionResult.toObject(includeInstance, f),
    missionPlan: (f = msg.getMissionPlan()) && proto.mavsdk.rpc.mission.MissionPlan.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionResponse}
 */
proto.mavsdk.rpc.mission.DownloadMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.DownloadMissionResponse;
  return proto.mavsdk.rpc.mission.DownloadMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.DownloadMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionResponse}
 */
proto.mavsdk.rpc.mission.DownloadMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader);
      msg.setMissionResult(value);
      break;
    case 2:
      var value = new proto.mavsdk.rpc.mission.MissionPlan;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionPlan.deserializeBinaryFromReader);
      msg.setMissionPlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.DownloadMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.DownloadMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.DownloadMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.DownloadMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter
    );
  }
  f = message.getMissionPlan();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mavsdk.rpc.mission.MissionPlan.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionResult mission_result = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.DownloadMissionResponse.prototype.getMissionResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionResponse} returns this
*/
proto.mavsdk.rpc.mission.DownloadMissionResponse.prototype.setMissionResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionResponse} returns this
 */
proto.mavsdk.rpc.mission.DownloadMissionResponse.prototype.clearMissionResult = function() {
  return this.setMissionResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.DownloadMissionResponse.prototype.hasMissionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MissionPlan mission_plan = 2;
 * @return {?proto.mavsdk.rpc.mission.MissionPlan}
 */
proto.mavsdk.rpc.mission.DownloadMissionResponse.prototype.getMissionPlan = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionPlan} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionPlan, 2));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionPlan|undefined} value
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionResponse} returns this
*/
proto.mavsdk.rpc.mission.DownloadMissionResponse.prototype.setMissionPlan = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionResponse} returns this
 */
proto.mavsdk.rpc.mission.DownloadMissionResponse.prototype.clearMissionPlan = function() {
  return this.setMissionPlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.DownloadMissionResponse.prototype.hasMissionPlan = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest}
 */
proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest;
  return proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest}
 */
proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SubscribeDownloadMissionWithProgressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionResult: (f = msg.getMissionResult()) && proto.mavsdk.rpc.mission.MissionResult.toObject(includeInstance, f),
    progressData: (f = msg.getProgressData()) && proto.mavsdk.rpc.mission.ProgressDataOrMission.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse}
 */
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse;
  return proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse}
 */
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader);
      msg.setMissionResult(value);
      break;
    case 2:
      var value = new proto.mavsdk.rpc.mission.ProgressDataOrMission;
      reader.readMessage(value,proto.mavsdk.rpc.mission.ProgressDataOrMission.deserializeBinaryFromReader);
      msg.setProgressData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter
    );
  }
  f = message.getProgressData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mavsdk.rpc.mission.ProgressDataOrMission.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionResult mission_result = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.prototype.getMissionResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse} returns this
*/
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.prototype.setMissionResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse} returns this
 */
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.prototype.clearMissionResult = function() {
  return this.setMissionResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.prototype.hasMissionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProgressDataOrMission progress_data = 2;
 * @return {?proto.mavsdk.rpc.mission.ProgressDataOrMission}
 */
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.prototype.getProgressData = function() {
  return /** @type{?proto.mavsdk.rpc.mission.ProgressDataOrMission} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.ProgressDataOrMission, 2));
};


/**
 * @param {?proto.mavsdk.rpc.mission.ProgressDataOrMission|undefined} value
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse} returns this
*/
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.prototype.setProgressData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse} returns this
 */
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.prototype.clearProgressData = function() {
  return this.setProgressData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.DownloadMissionWithProgressResponse.prototype.hasProgressData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.CancelMissionDownloadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.CancelMissionDownloadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.CancelMissionDownloadRequest}
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.CancelMissionDownloadRequest;
  return proto.mavsdk.rpc.mission.CancelMissionDownloadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.CancelMissionDownloadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.CancelMissionDownloadRequest}
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.CancelMissionDownloadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.CancelMissionDownloadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.CancelMissionDownloadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionResult: (f = msg.getMissionResult()) && proto.mavsdk.rpc.mission.MissionResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.CancelMissionDownloadResponse}
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.CancelMissionDownloadResponse;
  return proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.CancelMissionDownloadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.CancelMissionDownloadResponse}
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader);
      msg.setMissionResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.CancelMissionDownloadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionResult mission_result = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.prototype.getMissionResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission.CancelMissionDownloadResponse} returns this
*/
proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.prototype.setMissionResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.CancelMissionDownloadResponse} returns this
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.prototype.clearMissionResult = function() {
  return this.setMissionResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.CancelMissionDownloadResponse.prototype.hasMissionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.StartMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.StartMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.StartMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.StartMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.StartMissionRequest}
 */
proto.mavsdk.rpc.mission.StartMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.StartMissionRequest;
  return proto.mavsdk.rpc.mission.StartMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.StartMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.StartMissionRequest}
 */
proto.mavsdk.rpc.mission.StartMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.StartMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.StartMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.StartMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.StartMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.StartMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.StartMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.StartMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.StartMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionResult: (f = msg.getMissionResult()) && proto.mavsdk.rpc.mission.MissionResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.StartMissionResponse}
 */
proto.mavsdk.rpc.mission.StartMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.StartMissionResponse;
  return proto.mavsdk.rpc.mission.StartMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.StartMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.StartMissionResponse}
 */
proto.mavsdk.rpc.mission.StartMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader);
      msg.setMissionResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.StartMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.StartMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.StartMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.StartMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionResult mission_result = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.StartMissionResponse.prototype.getMissionResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission.StartMissionResponse} returns this
*/
proto.mavsdk.rpc.mission.StartMissionResponse.prototype.setMissionResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.StartMissionResponse} returns this
 */
proto.mavsdk.rpc.mission.StartMissionResponse.prototype.clearMissionResult = function() {
  return this.setMissionResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.StartMissionResponse.prototype.hasMissionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.PauseMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.PauseMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.PauseMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.PauseMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.PauseMissionRequest}
 */
proto.mavsdk.rpc.mission.PauseMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.PauseMissionRequest;
  return proto.mavsdk.rpc.mission.PauseMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.PauseMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.PauseMissionRequest}
 */
proto.mavsdk.rpc.mission.PauseMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.PauseMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.PauseMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.PauseMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.PauseMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.PauseMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.PauseMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.PauseMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.PauseMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionResult: (f = msg.getMissionResult()) && proto.mavsdk.rpc.mission.MissionResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.PauseMissionResponse}
 */
proto.mavsdk.rpc.mission.PauseMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.PauseMissionResponse;
  return proto.mavsdk.rpc.mission.PauseMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.PauseMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.PauseMissionResponse}
 */
proto.mavsdk.rpc.mission.PauseMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader);
      msg.setMissionResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.PauseMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.PauseMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.PauseMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.PauseMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionResult mission_result = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.PauseMissionResponse.prototype.getMissionResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission.PauseMissionResponse} returns this
*/
proto.mavsdk.rpc.mission.PauseMissionResponse.prototype.setMissionResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.PauseMissionResponse} returns this
 */
proto.mavsdk.rpc.mission.PauseMissionResponse.prototype.clearMissionResult = function() {
  return this.setMissionResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.PauseMissionResponse.prototype.hasMissionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.ClearMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.ClearMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.ClearMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.ClearMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.ClearMissionRequest}
 */
proto.mavsdk.rpc.mission.ClearMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.ClearMissionRequest;
  return proto.mavsdk.rpc.mission.ClearMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.ClearMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.ClearMissionRequest}
 */
proto.mavsdk.rpc.mission.ClearMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.ClearMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.ClearMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.ClearMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.ClearMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.ClearMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.ClearMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.ClearMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.ClearMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionResult: (f = msg.getMissionResult()) && proto.mavsdk.rpc.mission.MissionResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.ClearMissionResponse}
 */
proto.mavsdk.rpc.mission.ClearMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.ClearMissionResponse;
  return proto.mavsdk.rpc.mission.ClearMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.ClearMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.ClearMissionResponse}
 */
proto.mavsdk.rpc.mission.ClearMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader);
      msg.setMissionResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.ClearMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.ClearMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.ClearMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.ClearMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionResult mission_result = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.ClearMissionResponse.prototype.getMissionResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission.ClearMissionResponse} returns this
*/
proto.mavsdk.rpc.mission.ClearMissionResponse.prototype.setMissionResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.ClearMissionResponse} returns this
 */
proto.mavsdk.rpc.mission.ClearMissionResponse.prototype.clearMissionResult = function() {
  return this.setMissionResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.ClearMissionResponse.prototype.hasMissionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest}
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest;
  return proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest}
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 index = 1;
 * @return {number}
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest} returns this
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemRequest.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionResult: (f = msg.getMissionResult()) && proto.mavsdk.rpc.mission.MissionResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse}
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse;
  return proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse}
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader);
      msg.setMissionResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionResult mission_result = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.prototype.getMissionResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse} returns this
*/
proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.prototype.setMissionResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse} returns this
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.prototype.clearMissionResult = function() {
  return this.setMissionResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.SetCurrentMissionItemResponse.prototype.hasMissionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.IsMissionFinishedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.IsMissionFinishedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.IsMissionFinishedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.IsMissionFinishedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.IsMissionFinishedRequest}
 */
proto.mavsdk.rpc.mission.IsMissionFinishedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.IsMissionFinishedRequest;
  return proto.mavsdk.rpc.mission.IsMissionFinishedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.IsMissionFinishedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.IsMissionFinishedRequest}
 */
proto.mavsdk.rpc.mission.IsMissionFinishedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.IsMissionFinishedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.IsMissionFinishedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.IsMissionFinishedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.IsMissionFinishedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.IsMissionFinishedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.IsMissionFinishedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.IsMissionFinishedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.IsMissionFinishedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionResult: (f = msg.getMissionResult()) && proto.mavsdk.rpc.mission.MissionResult.toObject(includeInstance, f),
    isFinished: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.IsMissionFinishedResponse}
 */
proto.mavsdk.rpc.mission.IsMissionFinishedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.IsMissionFinishedResponse;
  return proto.mavsdk.rpc.mission.IsMissionFinishedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.IsMissionFinishedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.IsMissionFinishedResponse}
 */
proto.mavsdk.rpc.mission.IsMissionFinishedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader);
      msg.setMissionResult(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFinished(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.IsMissionFinishedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.IsMissionFinishedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.IsMissionFinishedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.IsMissionFinishedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter
    );
  }
  f = message.getIsFinished();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional MissionResult mission_result = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.IsMissionFinishedResponse.prototype.getMissionResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission.IsMissionFinishedResponse} returns this
*/
proto.mavsdk.rpc.mission.IsMissionFinishedResponse.prototype.setMissionResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.IsMissionFinishedResponse} returns this
 */
proto.mavsdk.rpc.mission.IsMissionFinishedResponse.prototype.clearMissionResult = function() {
  return this.setMissionResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.IsMissionFinishedResponse.prototype.hasMissionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool is_finished = 2;
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.IsMissionFinishedResponse.prototype.getIsFinished = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.mission.IsMissionFinishedResponse} returns this
 */
proto.mavsdk.rpc.mission.IsMissionFinishedResponse.prototype.setIsFinished = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest}
 */
proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest;
  return proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest}
 */
proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SubscribeMissionProgressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.MissionProgressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.MissionProgressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.MissionProgressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.MissionProgressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionProgress: (f = msg.getMissionProgress()) && proto.mavsdk.rpc.mission.MissionProgress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.MissionProgressResponse}
 */
proto.mavsdk.rpc.mission.MissionProgressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.MissionProgressResponse;
  return proto.mavsdk.rpc.mission.MissionProgressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.MissionProgressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.MissionProgressResponse}
 */
proto.mavsdk.rpc.mission.MissionProgressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionProgress;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionProgress.deserializeBinaryFromReader);
      msg.setMissionProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.MissionProgressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.MissionProgressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.MissionProgressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.MissionProgressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionProgress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionProgress.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionProgress mission_progress = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionProgress}
 */
proto.mavsdk.rpc.mission.MissionProgressResponse.prototype.getMissionProgress = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionProgress} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionProgress, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionProgress|undefined} value
 * @return {!proto.mavsdk.rpc.mission.MissionProgressResponse} returns this
*/
proto.mavsdk.rpc.mission.MissionProgressResponse.prototype.setMissionProgress = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.MissionProgressResponse} returns this
 */
proto.mavsdk.rpc.mission.MissionProgressResponse.prototype.clearMissionProgress = function() {
  return this.setMissionProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.MissionProgressResponse.prototype.hasMissionProgress = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest}
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest;
  return proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest}
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionResult: (f = msg.getMissionResult()) && proto.mavsdk.rpc.mission.MissionResult.toObject(includeInstance, f),
    enable: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse}
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse;
  return proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse}
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader);
      msg.setMissionResult(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter
    );
  }
  f = message.getEnable();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional MissionResult mission_result = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.prototype.getMissionResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse} returns this
*/
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.prototype.setMissionResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse} returns this
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.prototype.clearMissionResult = function() {
  return this.setMissionResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.prototype.hasMissionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool enable = 2;
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse} returns this
 */
proto.mavsdk.rpc.mission.GetReturnToLaunchAfterMissionResponse.prototype.setEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    enable: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest}
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest;
  return proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest}
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest} returns this
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionRequest.prototype.setEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionResult: (f = msg.getMissionResult()) && proto.mavsdk.rpc.mission.MissionResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse}
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse;
  return proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse}
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader);
      msg.setMissionResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionResult mission_result = 1;
 * @return {?proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.prototype.getMissionResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse} returns this
*/
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.prototype.setMissionResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse} returns this
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.prototype.clearMissionResult = function() {
  return this.setMissionResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.SetReturnToLaunchAfterMissionResponse.prototype.hasMissionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.MissionItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.MissionItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.MissionItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    latitudeDeg: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    longitudeDeg: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    relativeAltitudeM: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    speedMS: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    isFlyThrough: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    gimbalPitchDeg: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    gimbalYawDeg: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    cameraAction: jspb.Message.getFieldWithDefault(msg, 8, 0),
    loiterTimeS: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    cameraPhotoIntervalS: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    acceptanceRadiusM: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    yawDeg: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    cameraPhotoDistanceM: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    vehicleAction: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.MissionItem}
 */
proto.mavsdk.rpc.mission.MissionItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.MissionItem;
  return proto.mavsdk.rpc.mission.MissionItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.MissionItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.MissionItem}
 */
proto.mavsdk.rpc.mission.MissionItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitudeDeg(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitudeDeg(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRelativeAltitudeM(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSpeedMS(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFlyThrough(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGimbalPitchDeg(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGimbalYawDeg(value);
      break;
    case 8:
      var value = /** @type {!proto.mavsdk.rpc.mission.MissionItem.CameraAction} */ (reader.readEnum());
      msg.setCameraAction(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLoiterTimeS(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCameraPhotoIntervalS(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAcceptanceRadiusM(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYawDeg(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCameraPhotoDistanceM(value);
      break;
    case 14:
      var value = /** @type {!proto.mavsdk.rpc.mission.MissionItem.VehicleAction} */ (reader.readEnum());
      msg.setVehicleAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.MissionItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.MissionItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.MissionItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLatitudeDeg();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLongitudeDeg();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getRelativeAltitudeM();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getSpeedMS();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getIsFlyThrough();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getGimbalPitchDeg();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getGimbalYawDeg();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getCameraAction();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getLoiterTimeS();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getCameraPhotoIntervalS();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getAcceptanceRadiusM();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getYawDeg();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getCameraPhotoDistanceM();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getVehicleAction();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mavsdk.rpc.mission.MissionItem.CameraAction = {
  CAMERA_ACTION_NONE: 0,
  CAMERA_ACTION_TAKE_PHOTO: 1,
  CAMERA_ACTION_START_PHOTO_INTERVAL: 2,
  CAMERA_ACTION_STOP_PHOTO_INTERVAL: 3,
  CAMERA_ACTION_START_VIDEO: 4,
  CAMERA_ACTION_STOP_VIDEO: 5,
  CAMERA_ACTION_START_PHOTO_DISTANCE: 6,
  CAMERA_ACTION_STOP_PHOTO_DISTANCE: 7
};

/**
 * @enum {number}
 */
proto.mavsdk.rpc.mission.MissionItem.VehicleAction = {
  VEHICLE_ACTION_NONE: 0,
  VEHICLE_ACTION_TAKEOFF: 1,
  VEHICLE_ACTION_LAND: 2,
  VEHICLE_ACTION_TRANSITION_TO_FW: 3,
  VEHICLE_ACTION_TRANSITION_TO_MC: 4
};

/**
 * optional double latitude_deg = 1;
 * @return {number}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getLatitudeDeg = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setLatitudeDeg = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double longitude_deg = 2;
 * @return {number}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getLongitudeDeg = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setLongitudeDeg = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float relative_altitude_m = 3;
 * @return {number}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getRelativeAltitudeM = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setRelativeAltitudeM = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float speed_m_s = 4;
 * @return {number}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getSpeedMS = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setSpeedMS = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional bool is_fly_through = 5;
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getIsFlyThrough = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setIsFlyThrough = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional float gimbal_pitch_deg = 6;
 * @return {number}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getGimbalPitchDeg = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setGimbalPitchDeg = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float gimbal_yaw_deg = 7;
 * @return {number}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getGimbalYawDeg = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setGimbalYawDeg = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional CameraAction camera_action = 8;
 * @return {!proto.mavsdk.rpc.mission.MissionItem.CameraAction}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getCameraAction = function() {
  return /** @type {!proto.mavsdk.rpc.mission.MissionItem.CameraAction} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.mavsdk.rpc.mission.MissionItem.CameraAction} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setCameraAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional float loiter_time_s = 9;
 * @return {number}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getLoiterTimeS = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setLoiterTimeS = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double camera_photo_interval_s = 10;
 * @return {number}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getCameraPhotoIntervalS = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setCameraPhotoIntervalS = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float acceptance_radius_m = 11;
 * @return {number}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getAcceptanceRadiusM = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setAcceptanceRadiusM = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float yaw_deg = 12;
 * @return {number}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getYawDeg = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setYawDeg = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float camera_photo_distance_m = 13;
 * @return {number}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getCameraPhotoDistanceM = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setCameraPhotoDistanceM = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional VehicleAction vehicle_action = 14;
 * @return {!proto.mavsdk.rpc.mission.MissionItem.VehicleAction}
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.getVehicleAction = function() {
  return /** @type {!proto.mavsdk.rpc.mission.MissionItem.VehicleAction} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.mavsdk.rpc.mission.MissionItem.VehicleAction} value
 * @return {!proto.mavsdk.rpc.mission.MissionItem} returns this
 */
proto.mavsdk.rpc.mission.MissionItem.prototype.setVehicleAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mavsdk.rpc.mission.MissionPlan.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.MissionPlan.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.MissionPlan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.MissionPlan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.MissionPlan.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionItemsList: jspb.Message.toObjectList(msg.getMissionItemsList(),
    proto.mavsdk.rpc.mission.MissionItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.MissionPlan}
 */
proto.mavsdk.rpc.mission.MissionPlan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.MissionPlan;
  return proto.mavsdk.rpc.mission.MissionPlan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.MissionPlan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.MissionPlan}
 */
proto.mavsdk.rpc.mission.MissionPlan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission.MissionItem;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionItem.deserializeBinaryFromReader);
      msg.addMissionItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.MissionPlan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.MissionPlan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.MissionPlan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.MissionPlan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mavsdk.rpc.mission.MissionItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MissionItem mission_items = 1;
 * @return {!Array<!proto.mavsdk.rpc.mission.MissionItem>}
 */
proto.mavsdk.rpc.mission.MissionPlan.prototype.getMissionItemsList = function() {
  return /** @type{!Array<!proto.mavsdk.rpc.mission.MissionItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mavsdk.rpc.mission.MissionItem, 1));
};


/**
 * @param {!Array<!proto.mavsdk.rpc.mission.MissionItem>} value
 * @return {!proto.mavsdk.rpc.mission.MissionPlan} returns this
*/
proto.mavsdk.rpc.mission.MissionPlan.prototype.setMissionItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mavsdk.rpc.mission.MissionItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mavsdk.rpc.mission.MissionItem}
 */
proto.mavsdk.rpc.mission.MissionPlan.prototype.addMissionItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mavsdk.rpc.mission.MissionItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mavsdk.rpc.mission.MissionPlan} returns this
 */
proto.mavsdk.rpc.mission.MissionPlan.prototype.clearMissionItemsList = function() {
  return this.setMissionItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.MissionProgress.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.MissionProgress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.MissionProgress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.MissionProgress.toObject = function(includeInstance, msg) {
  var f, obj = {
    current: jspb.Message.getFieldWithDefault(msg, 1, 0),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.MissionProgress}
 */
proto.mavsdk.rpc.mission.MissionProgress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.MissionProgress;
  return proto.mavsdk.rpc.mission.MissionProgress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.MissionProgress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.MissionProgress}
 */
proto.mavsdk.rpc.mission.MissionProgress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.MissionProgress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.MissionProgress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.MissionProgress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.MissionProgress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrent();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 current = 1;
 * @return {number}
 */
proto.mavsdk.rpc.mission.MissionProgress.prototype.getCurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.MissionProgress} returns this
 */
proto.mavsdk.rpc.mission.MissionProgress.prototype.setCurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 total = 2;
 * @return {number}
 */
proto.mavsdk.rpc.mission.MissionProgress.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.MissionProgress} returns this
 */
proto.mavsdk.rpc.mission.MissionProgress.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.MissionResult.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.MissionResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.MissionResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.MissionResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0),
    resultStr: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.MissionResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.MissionResult;
  return proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.MissionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.MissionResult}
 */
proto.mavsdk.rpc.mission.MissionResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mavsdk.rpc.mission.MissionResult.Result} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.MissionResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.MissionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.MissionResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getResultStr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mavsdk.rpc.mission.MissionResult.Result = {
  RESULT_UNKNOWN: 0,
  RESULT_SUCCESS: 1,
  RESULT_ERROR: 2,
  RESULT_TOO_MANY_MISSION_ITEMS: 3,
  RESULT_BUSY: 4,
  RESULT_TIMEOUT: 5,
  RESULT_INVALID_ARGUMENT: 6,
  RESULT_UNSUPPORTED: 7,
  RESULT_NO_MISSION_AVAILABLE: 8,
  RESULT_UNSUPPORTED_MISSION_CMD: 11,
  RESULT_TRANSFER_CANCELLED: 12,
  RESULT_NO_SYSTEM: 13,
  RESULT_NEXT: 14,
  RESULT_DENIED: 15,
  RESULT_PROTOCOL_ERROR: 16,
  RESULT_INT_MESSAGES_NOT_SUPPORTED: 17
};

/**
 * optional Result result = 1;
 * @return {!proto.mavsdk.rpc.mission.MissionResult.Result}
 */
proto.mavsdk.rpc.mission.MissionResult.prototype.getResult = function() {
  return /** @type {!proto.mavsdk.rpc.mission.MissionResult.Result} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mavsdk.rpc.mission.MissionResult.Result} value
 * @return {!proto.mavsdk.rpc.mission.MissionResult} returns this
 */
proto.mavsdk.rpc.mission.MissionResult.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string result_str = 2;
 * @return {string}
 */
proto.mavsdk.rpc.mission.MissionResult.prototype.getResultStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.mission.MissionResult} returns this
 */
proto.mavsdk.rpc.mission.MissionResult.prototype.setResultStr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.ProgressData.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.ProgressData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.ProgressData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.ProgressData.toObject = function(includeInstance, msg) {
  var f, obj = {
    progress: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.ProgressData}
 */
proto.mavsdk.rpc.mission.ProgressData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.ProgressData;
  return proto.mavsdk.rpc.mission.ProgressData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.ProgressData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.ProgressData}
 */
proto.mavsdk.rpc.mission.ProgressData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.ProgressData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.ProgressData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.ProgressData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.ProgressData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProgress();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
};


/**
 * optional float progress = 1;
 * @return {number}
 */
proto.mavsdk.rpc.mission.ProgressData.prototype.getProgress = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.ProgressData} returns this
 */
proto.mavsdk.rpc.mission.ProgressData.prototype.setProgress = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission.ProgressDataOrMission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission.ProgressDataOrMission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.toObject = function(includeInstance, msg) {
  var f, obj = {
    hasProgress: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    progress: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    hasMission: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    missionPlan: (f = msg.getMissionPlan()) && proto.mavsdk.rpc.mission.MissionPlan.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission.ProgressDataOrMission}
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission.ProgressDataOrMission;
  return proto.mavsdk.rpc.mission.ProgressDataOrMission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission.ProgressDataOrMission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission.ProgressDataOrMission}
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasProgress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setProgress(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasMission(value);
      break;
    case 4:
      var value = new proto.mavsdk.rpc.mission.MissionPlan;
      reader.readMessage(value,proto.mavsdk.rpc.mission.MissionPlan.deserializeBinaryFromReader);
      msg.setMissionPlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission.ProgressDataOrMission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission.ProgressDataOrMission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHasProgress();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getProgress();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getHasMission();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getMissionPlan();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mavsdk.rpc.mission.MissionPlan.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool has_progress = 1;
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.prototype.getHasProgress = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.mission.ProgressDataOrMission} returns this
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.prototype.setHasProgress = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional float progress = 2;
 * @return {number}
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.prototype.getProgress = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission.ProgressDataOrMission} returns this
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.prototype.setProgress = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional bool has_mission = 3;
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.prototype.getHasMission = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.mission.ProgressDataOrMission} returns this
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.prototype.setHasMission = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional MissionPlan mission_plan = 4;
 * @return {?proto.mavsdk.rpc.mission.MissionPlan}
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.prototype.getMissionPlan = function() {
  return /** @type{?proto.mavsdk.rpc.mission.MissionPlan} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission.MissionPlan, 4));
};


/**
 * @param {?proto.mavsdk.rpc.mission.MissionPlan|undefined} value
 * @return {!proto.mavsdk.rpc.mission.ProgressDataOrMission} returns this
*/
proto.mavsdk.rpc.mission.ProgressDataOrMission.prototype.setMissionPlan = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission.ProgressDataOrMission} returns this
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.prototype.clearMissionPlan = function() {
  return this.setMissionPlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission.ProgressDataOrMission.prototype.hasMissionPlan = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.mavsdk.rpc.mission);


// fix autocompletion
module.exports = exports;
