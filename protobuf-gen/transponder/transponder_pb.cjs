/* eslint-disable */

// source: transponder/transponder.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.mavsdk.rpc.transponder.AdsbAltitudeType', null, global);
goog.exportSymbol('proto.mavsdk.rpc.transponder.AdsbEmitterType', null, global);
goog.exportSymbol('proto.mavsdk.rpc.transponder.AdsbVehicle', null, global);
goog.exportSymbol('proto.mavsdk.rpc.transponder.SetRateTransponderRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.transponder.SetRateTransponderResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.transponder.SubscribeTransponderRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.transponder.TransponderResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.transponder.TransponderResult', null, global);
goog.exportSymbol('proto.mavsdk.rpc.transponder.TransponderResult.Result', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.transponder.SubscribeTransponderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.transponder.SubscribeTransponderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.transponder.SubscribeTransponderRequest.displayName = 'proto.mavsdk.rpc.transponder.SubscribeTransponderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.transponder.TransponderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.transponder.TransponderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.transponder.TransponderResponse.displayName = 'proto.mavsdk.rpc.transponder.TransponderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.transponder.SetRateTransponderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.transponder.SetRateTransponderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.transponder.SetRateTransponderRequest.displayName = 'proto.mavsdk.rpc.transponder.SetRateTransponderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.transponder.SetRateTransponderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.transponder.SetRateTransponderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.transponder.SetRateTransponderResponse.displayName = 'proto.mavsdk.rpc.transponder.SetRateTransponderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.transponder.AdsbVehicle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.transponder.AdsbVehicle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.transponder.AdsbVehicle.displayName = 'proto.mavsdk.rpc.transponder.AdsbVehicle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.transponder.TransponderResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.transponder.TransponderResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.transponder.TransponderResult.displayName = 'proto.mavsdk.rpc.transponder.TransponderResult';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.transponder.SubscribeTransponderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.transponder.SubscribeTransponderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.transponder.SubscribeTransponderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.transponder.SubscribeTransponderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.transponder.SubscribeTransponderRequest}
 */
proto.mavsdk.rpc.transponder.SubscribeTransponderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.transponder.SubscribeTransponderRequest;
  return proto.mavsdk.rpc.transponder.SubscribeTransponderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.transponder.SubscribeTransponderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.transponder.SubscribeTransponderRequest}
 */
proto.mavsdk.rpc.transponder.SubscribeTransponderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.transponder.SubscribeTransponderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.transponder.SubscribeTransponderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.transponder.SubscribeTransponderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.transponder.SubscribeTransponderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.transponder.TransponderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.transponder.TransponderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.transponder.TransponderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.transponder.TransponderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transponder: (f = msg.getTransponder()) && proto.mavsdk.rpc.transponder.AdsbVehicle.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.transponder.TransponderResponse}
 */
proto.mavsdk.rpc.transponder.TransponderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.transponder.TransponderResponse;
  return proto.mavsdk.rpc.transponder.TransponderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.transponder.TransponderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.transponder.TransponderResponse}
 */
proto.mavsdk.rpc.transponder.TransponderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.transponder.AdsbVehicle;
      reader.readMessage(value,proto.mavsdk.rpc.transponder.AdsbVehicle.deserializeBinaryFromReader);
      msg.setTransponder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.transponder.TransponderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.transponder.TransponderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.transponder.TransponderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.transponder.TransponderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransponder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.transponder.AdsbVehicle.serializeBinaryToWriter
    );
  }
};


/**
 * optional AdsbVehicle transponder = 1;
 * @return {?proto.mavsdk.rpc.transponder.AdsbVehicle}
 */
proto.mavsdk.rpc.transponder.TransponderResponse.prototype.getTransponder = function() {
  return /** @type{?proto.mavsdk.rpc.transponder.AdsbVehicle} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.transponder.AdsbVehicle, 1));
};


/**
 * @param {?proto.mavsdk.rpc.transponder.AdsbVehicle|undefined} value
 * @return {!proto.mavsdk.rpc.transponder.TransponderResponse} returns this
*/
proto.mavsdk.rpc.transponder.TransponderResponse.prototype.setTransponder = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.transponder.TransponderResponse} returns this
 */
proto.mavsdk.rpc.transponder.TransponderResponse.prototype.clearTransponder = function() {
  return this.setTransponder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.transponder.TransponderResponse.prototype.hasTransponder = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.transponder.SetRateTransponderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.transponder.SetRateTransponderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.transponder.SetRateTransponderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.transponder.SetRateTransponderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rateHz: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.transponder.SetRateTransponderRequest}
 */
proto.mavsdk.rpc.transponder.SetRateTransponderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.transponder.SetRateTransponderRequest;
  return proto.mavsdk.rpc.transponder.SetRateTransponderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.transponder.SetRateTransponderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.transponder.SetRateTransponderRequest}
 */
proto.mavsdk.rpc.transponder.SetRateTransponderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRateHz(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.transponder.SetRateTransponderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.transponder.SetRateTransponderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.transponder.SetRateTransponderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.transponder.SetRateTransponderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRateHz();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double rate_hz = 1;
 * @return {number}
 */
proto.mavsdk.rpc.transponder.SetRateTransponderRequest.prototype.getRateHz = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.transponder.SetRateTransponderRequest} returns this
 */
proto.mavsdk.rpc.transponder.SetRateTransponderRequest.prototype.setRateHz = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.transponder.SetRateTransponderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.transponder.SetRateTransponderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.transponder.SetRateTransponderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.transponder.SetRateTransponderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transponderResult: (f = msg.getTransponderResult()) && proto.mavsdk.rpc.transponder.TransponderResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.transponder.SetRateTransponderResponse}
 */
proto.mavsdk.rpc.transponder.SetRateTransponderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.transponder.SetRateTransponderResponse;
  return proto.mavsdk.rpc.transponder.SetRateTransponderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.transponder.SetRateTransponderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.transponder.SetRateTransponderResponse}
 */
proto.mavsdk.rpc.transponder.SetRateTransponderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.transponder.TransponderResult;
      reader.readMessage(value,proto.mavsdk.rpc.transponder.TransponderResult.deserializeBinaryFromReader);
      msg.setTransponderResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.transponder.SetRateTransponderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.transponder.SetRateTransponderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.transponder.SetRateTransponderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.transponder.SetRateTransponderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransponderResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.transponder.TransponderResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional TransponderResult transponder_result = 1;
 * @return {?proto.mavsdk.rpc.transponder.TransponderResult}
 */
proto.mavsdk.rpc.transponder.SetRateTransponderResponse.prototype.getTransponderResult = function() {
  return /** @type{?proto.mavsdk.rpc.transponder.TransponderResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.transponder.TransponderResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.transponder.TransponderResult|undefined} value
 * @return {!proto.mavsdk.rpc.transponder.SetRateTransponderResponse} returns this
*/
proto.mavsdk.rpc.transponder.SetRateTransponderResponse.prototype.setTransponderResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.transponder.SetRateTransponderResponse} returns this
 */
proto.mavsdk.rpc.transponder.SetRateTransponderResponse.prototype.clearTransponderResult = function() {
  return this.setTransponderResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.transponder.SetRateTransponderResponse.prototype.hasTransponderResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.transponder.AdsbVehicle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.transponder.AdsbVehicle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.toObject = function(includeInstance, msg) {
  var f, obj = {
    icaoAddress: jspb.Message.getFieldWithDefault(msg, 1, 0),
    latitudeDeg: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    longitudeDeg: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    altitudeType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    absoluteAltitudeM: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    headingDeg: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    horizontalVelocityMS: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    verticalVelocityMS: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    callsign: jspb.Message.getFieldWithDefault(msg, 9, ""),
    emitterType: jspb.Message.getFieldWithDefault(msg, 10, 0),
    squawk: jspb.Message.getFieldWithDefault(msg, 13, 0),
    tslcS: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.transponder.AdsbVehicle;
  return proto.mavsdk.rpc.transponder.AdsbVehicle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.transponder.AdsbVehicle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIcaoAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitudeDeg(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitudeDeg(value);
      break;
    case 4:
      var value = /** @type {!proto.mavsdk.rpc.transponder.AdsbAltitudeType} */ (reader.readEnum());
      msg.setAltitudeType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAbsoluteAltitudeM(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHeadingDeg(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHorizontalVelocityMS(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVerticalVelocityMS(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallsign(value);
      break;
    case 10:
      var value = /** @type {!proto.mavsdk.rpc.transponder.AdsbEmitterType} */ (reader.readEnum());
      msg.setEmitterType(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSquawk(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTslcS(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.transponder.AdsbVehicle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.transponder.AdsbVehicle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIcaoAddress();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getLatitudeDeg();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getLongitudeDeg();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getAltitudeType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAbsoluteAltitudeM();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getHeadingDeg();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getHorizontalVelocityMS();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getVerticalVelocityMS();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getCallsign();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getEmitterType();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getSquawk();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getTslcS();
  if (f !== 0) {
    writer.writeUint32(
      14,
      f
    );
  }
};


/**
 * optional uint32 icao_address = 1;
 * @return {number}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.getIcaoAddress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle} returns this
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.setIcaoAddress = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double latitude_deg = 2;
 * @return {number}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.getLatitudeDeg = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle} returns this
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.setLatitudeDeg = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double longitude_deg = 3;
 * @return {number}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.getLongitudeDeg = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle} returns this
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.setLongitudeDeg = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional AdsbAltitudeType altitude_type = 4;
 * @return {!proto.mavsdk.rpc.transponder.AdsbAltitudeType}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.getAltitudeType = function() {
  return /** @type {!proto.mavsdk.rpc.transponder.AdsbAltitudeType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.mavsdk.rpc.transponder.AdsbAltitudeType} value
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle} returns this
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.setAltitudeType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional float absolute_altitude_m = 5;
 * @return {number}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.getAbsoluteAltitudeM = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle} returns this
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.setAbsoluteAltitudeM = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float heading_deg = 6;
 * @return {number}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.getHeadingDeg = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle} returns this
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.setHeadingDeg = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float horizontal_velocity_m_s = 7;
 * @return {number}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.getHorizontalVelocityMS = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle} returns this
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.setHorizontalVelocityMS = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float vertical_velocity_m_s = 8;
 * @return {number}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.getVerticalVelocityMS = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle} returns this
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.setVerticalVelocityMS = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string callsign = 9;
 * @return {string}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.getCallsign = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle} returns this
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.setCallsign = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional AdsbEmitterType emitter_type = 10;
 * @return {!proto.mavsdk.rpc.transponder.AdsbEmitterType}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.getEmitterType = function() {
  return /** @type {!proto.mavsdk.rpc.transponder.AdsbEmitterType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.mavsdk.rpc.transponder.AdsbEmitterType} value
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle} returns this
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.setEmitterType = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional uint32 squawk = 13;
 * @return {number}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.getSquawk = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle} returns this
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.setSquawk = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional uint32 tslc_s = 14;
 * @return {number}
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.getTslcS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.transponder.AdsbVehicle} returns this
 */
proto.mavsdk.rpc.transponder.AdsbVehicle.prototype.setTslcS = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.transponder.TransponderResult.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.transponder.TransponderResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.transponder.TransponderResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.transponder.TransponderResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0),
    resultStr: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.transponder.TransponderResult}
 */
proto.mavsdk.rpc.transponder.TransponderResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.transponder.TransponderResult;
  return proto.mavsdk.rpc.transponder.TransponderResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.transponder.TransponderResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.transponder.TransponderResult}
 */
proto.mavsdk.rpc.transponder.TransponderResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mavsdk.rpc.transponder.TransponderResult.Result} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.transponder.TransponderResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.transponder.TransponderResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.transponder.TransponderResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.transponder.TransponderResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getResultStr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mavsdk.rpc.transponder.TransponderResult.Result = {
  RESULT_UNKNOWN: 0,
  RESULT_SUCCESS: 1,
  RESULT_NO_SYSTEM: 2,
  RESULT_CONNECTION_ERROR: 3,
  RESULT_BUSY: 4,
  RESULT_COMMAND_DENIED: 5,
  RESULT_TIMEOUT: 6
};

/**
 * optional Result result = 1;
 * @return {!proto.mavsdk.rpc.transponder.TransponderResult.Result}
 */
proto.mavsdk.rpc.transponder.TransponderResult.prototype.getResult = function() {
  return /** @type {!proto.mavsdk.rpc.transponder.TransponderResult.Result} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mavsdk.rpc.transponder.TransponderResult.Result} value
 * @return {!proto.mavsdk.rpc.transponder.TransponderResult} returns this
 */
proto.mavsdk.rpc.transponder.TransponderResult.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string result_str = 2;
 * @return {string}
 */
proto.mavsdk.rpc.transponder.TransponderResult.prototype.getResultStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.transponder.TransponderResult} returns this
 */
proto.mavsdk.rpc.transponder.TransponderResult.prototype.setResultStr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.mavsdk.rpc.transponder.AdsbEmitterType = {
  ADSB_EMITTER_TYPE_NO_INFO: 0,
  ADSB_EMITTER_TYPE_LIGHT: 1,
  ADSB_EMITTER_TYPE_SMALL: 2,
  ADSB_EMITTER_TYPE_LARGE: 3,
  ADSB_EMITTER_TYPE_HIGH_VORTEX_LARGE: 4,
  ADSB_EMITTER_TYPE_HEAVY: 5,
  ADSB_EMITTER_TYPE_HIGHLY_MANUV: 6,
  ADSB_EMITTER_TYPE_ROTOCRAFT: 7,
  ADSB_EMITTER_TYPE_UNASSIGNED: 8,
  ADSB_EMITTER_TYPE_GLIDER: 9,
  ADSB_EMITTER_TYPE_LIGHTER_AIR: 10,
  ADSB_EMITTER_TYPE_PARACHUTE: 11,
  ADSB_EMITTER_TYPE_ULTRA_LIGHT: 12,
  ADSB_EMITTER_TYPE_UNASSIGNED2: 13,
  ADSB_EMITTER_TYPE_UAV: 14,
  ADSB_EMITTER_TYPE_SPACE: 15,
  ADSB_EMITTER_TYPE_UNASSGINED3: 16,
  ADSB_EMITTER_TYPE_EMERGENCY_SURFACE: 17,
  ADSB_EMITTER_TYPE_SERVICE_SURFACE: 18,
  ADSB_EMITTER_TYPE_POINT_OBSTACLE: 19
};

/**
 * @enum {number}
 */
proto.mavsdk.rpc.transponder.AdsbAltitudeType = {
  ADSB_ALTITUDE_TYPE_PRESSURE_QNH: 0,
  ADSB_ALTITUDE_TYPE_GEOMETRIC: 1
};

goog.object.extend(exports, proto.mavsdk.rpc.transponder);


// fix autocompletion
module.exports = exports;
