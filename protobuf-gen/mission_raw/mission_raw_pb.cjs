/* eslint-disable */

// source: mission_raw/mission_raw.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var mavsdk_options_pb = require('../mavsdk_options_pb.cjs');
goog.object.extend(proto, mavsdk_options_pb);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.ClearMissionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.ClearMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.DownloadMissionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.DownloadMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.MissionChangedResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.MissionImportData', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.MissionItem', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.MissionProgress', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.MissionProgressResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.MissionRawResult', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.MissionRawResult.Result', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.PauseMissionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.PauseMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.StartMissionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.StartMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.UploadMissionRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.UploadMissionResponse', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest', null, global);
goog.exportSymbol('proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.UploadMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mavsdk.rpc.mission_raw.UploadMissionRequest.repeatedFields_, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.UploadMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.UploadMissionRequest.displayName = 'proto.mavsdk.rpc.mission_raw.UploadMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.UploadMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.UploadMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.UploadMissionResponse.displayName = 'proto.mavsdk.rpc.mission_raw.UploadMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.repeatedFields_, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.displayName = 'proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.displayName = 'proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.repeatedFields_, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.displayName = 'proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.displayName = 'proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest.displayName = 'proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.displayName = 'proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.DownloadMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.DownloadMissionRequest.displayName = 'proto.mavsdk.rpc.mission_raw.DownloadMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.repeatedFields_, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.DownloadMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.displayName = 'proto.mavsdk.rpc.mission_raw.DownloadMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest.displayName = 'proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.displayName = 'proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.StartMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.StartMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.StartMissionRequest.displayName = 'proto.mavsdk.rpc.mission_raw.StartMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.StartMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.StartMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.StartMissionResponse.displayName = 'proto.mavsdk.rpc.mission_raw.StartMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.PauseMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.PauseMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.PauseMissionRequest.displayName = 'proto.mavsdk.rpc.mission_raw.PauseMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.PauseMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.PauseMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.PauseMissionResponse.displayName = 'proto.mavsdk.rpc.mission_raw.PauseMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.ClearMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.ClearMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.ClearMissionRequest.displayName = 'proto.mavsdk.rpc.mission_raw.ClearMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.ClearMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.ClearMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.ClearMissionResponse.displayName = 'proto.mavsdk.rpc.mission_raw.ClearMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest.displayName = 'proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.displayName = 'proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest.displayName = 'proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.MissionProgressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.MissionProgressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.MissionProgressResponse.displayName = 'proto.mavsdk.rpc.mission_raw.MissionProgressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest.displayName = 'proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.MissionChangedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.MissionChangedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.MissionChangedResponse.displayName = 'proto.mavsdk.rpc.mission_raw.MissionChangedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest.displayName = 'proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.displayName = 'proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest.displayName = 'proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.displayName = 'proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.MissionProgress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.MissionProgress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.MissionProgress.displayName = 'proto.mavsdk.rpc.mission_raw.MissionProgress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.MissionItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.MissionItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.MissionItem.displayName = 'proto.mavsdk.rpc.mission_raw.MissionItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.MissionImportData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mavsdk.rpc.mission_raw.MissionImportData.repeatedFields_, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.MissionImportData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.MissionImportData.displayName = 'proto.mavsdk.rpc.mission_raw.MissionImportData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mavsdk.rpc.mission_raw.MissionRawResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mavsdk.rpc.mission_raw.MissionRawResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mavsdk.rpc.mission_raw.MissionRawResult.displayName = 'proto.mavsdk.rpc.mission_raw.MissionRawResult';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mavsdk.rpc.mission_raw.UploadMissionRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.UploadMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.UploadMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.UploadMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.UploadMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionItemsList: jspb.Message.toObjectList(msg.getMissionItemsList(),
    proto.mavsdk.rpc.mission_raw.MissionItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadMissionRequest}
 */
proto.mavsdk.rpc.mission_raw.UploadMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.UploadMissionRequest;
  return proto.mavsdk.rpc.mission_raw.UploadMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.UploadMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadMissionRequest}
 */
proto.mavsdk.rpc.mission_raw.UploadMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionItem;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionItem.deserializeBinaryFromReader);
      msg.addMissionItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.UploadMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.UploadMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.UploadMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.UploadMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MissionItem mission_items = 1;
 * @return {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>}
 */
proto.mavsdk.rpc.mission_raw.UploadMissionRequest.prototype.getMissionItemsList = function() {
  return /** @type{!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionItem, 1));
};


/**
 * @param {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} value
 * @return {!proto.mavsdk.rpc.mission_raw.UploadMissionRequest} returns this
*/
proto.mavsdk.rpc.mission_raw.UploadMissionRequest.prototype.setMissionItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mavsdk.rpc.mission_raw.MissionItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem}
 */
proto.mavsdk.rpc.mission_raw.UploadMissionRequest.prototype.addMissionItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mavsdk.rpc.mission_raw.MissionItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadMissionRequest} returns this
 */
proto.mavsdk.rpc.mission_raw.UploadMissionRequest.prototype.clearMissionItemsList = function() {
  return this.setMissionItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.UploadMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.UploadMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.UploadMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.UploadMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionRawResult: (f = msg.getMissionRawResult()) && proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadMissionResponse}
 */
proto.mavsdk.rpc.mission_raw.UploadMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.UploadMissionResponse;
  return proto.mavsdk.rpc.mission_raw.UploadMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.UploadMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadMissionResponse}
 */
proto.mavsdk.rpc.mission_raw.UploadMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionRawResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader);
      msg.setMissionRawResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.UploadMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.UploadMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.UploadMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.UploadMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionRawResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRawResult mission_raw_result = 1;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.UploadMissionResponse.prototype.getMissionRawResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionRawResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionRawResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionRawResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.UploadMissionResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.UploadMissionResponse.prototype.setMissionRawResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadMissionResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.UploadMissionResponse.prototype.clearMissionRawResult = function() {
  return this.setMissionRawResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.UploadMissionResponse.prototype.hasMissionRawResult = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionItemsList: jspb.Message.toObjectList(msg.getMissionItemsList(),
    proto.mavsdk.rpc.mission_raw.MissionItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest}
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest;
  return proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest}
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionItem;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionItem.deserializeBinaryFromReader);
      msg.addMissionItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MissionItem mission_items = 1;
 * @return {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>}
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.prototype.getMissionItemsList = function() {
  return /** @type{!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionItem, 1));
};


/**
 * @param {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} value
 * @return {!proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest} returns this
*/
proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.prototype.setMissionItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mavsdk.rpc.mission_raw.MissionItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem}
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.prototype.addMissionItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mavsdk.rpc.mission_raw.MissionItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest} returns this
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceRequest.prototype.clearMissionItemsList = function() {
  return this.setMissionItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionRawResult: (f = msg.getMissionRawResult()) && proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse}
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse;
  return proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse}
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionRawResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader);
      msg.setMissionRawResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionRawResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRawResult mission_raw_result = 1;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.prototype.getMissionRawResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionRawResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionRawResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionRawResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.prototype.setMissionRawResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.prototype.clearMissionRawResult = function() {
  return this.setMissionRawResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.UploadGeofenceResponse.prototype.hasMissionRawResult = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionItemsList: jspb.Message.toObjectList(msg.getMissionItemsList(),
    proto.mavsdk.rpc.mission_raw.MissionItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest}
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest;
  return proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest}
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionItem;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionItem.deserializeBinaryFromReader);
      msg.addMissionItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MissionItem mission_items = 1;
 * @return {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>}
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.prototype.getMissionItemsList = function() {
  return /** @type{!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionItem, 1));
};


/**
 * @param {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} value
 * @return {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest} returns this
*/
proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.prototype.setMissionItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mavsdk.rpc.mission_raw.MissionItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem}
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.prototype.addMissionItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mavsdk.rpc.mission_raw.MissionItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest} returns this
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsRequest.prototype.clearMissionItemsList = function() {
  return this.setMissionItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionRawResult: (f = msg.getMissionRawResult()) && proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse}
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse;
  return proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse}
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionRawResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader);
      msg.setMissionRawResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionRawResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRawResult mission_raw_result = 1;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.prototype.getMissionRawResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionRawResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionRawResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionRawResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.prototype.setMissionRawResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.prototype.clearMissionRawResult = function() {
  return this.setMissionRawResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.UploadRallyPointsResponse.prototype.hasMissionRawResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest;
  return proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionRawResult: (f = msg.getMissionRawResult()) && proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse;
  return proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionRawResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader);
      msg.setMissionRawResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionRawResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRawResult mission_raw_result = 1;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.prototype.getMissionRawResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionRawResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionRawResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionRawResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.prototype.setMissionRawResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.prototype.clearMissionRawResult = function() {
  return this.setMissionRawResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionUploadResponse.prototype.hasMissionRawResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.DownloadMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.DownloadMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.DownloadMissionRequest}
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.DownloadMissionRequest;
  return proto.mavsdk.rpc.mission_raw.DownloadMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.DownloadMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.DownloadMissionRequest}
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.DownloadMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.DownloadMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.DownloadMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionRawResult: (f = msg.getMissionRawResult()) && proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject(includeInstance, f),
    missionItemsList: jspb.Message.toObjectList(msg.getMissionItemsList(),
    proto.mavsdk.rpc.mission_raw.MissionItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.DownloadMissionResponse}
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.DownloadMissionResponse;
  return proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.DownloadMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.DownloadMissionResponse}
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionRawResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader);
      msg.setMissionRawResult(value);
      break;
    case 2:
      var value = new proto.mavsdk.rpc.mission_raw.MissionItem;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionItem.deserializeBinaryFromReader);
      msg.addMissionItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.DownloadMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionRawResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter
    );
  }
  f = message.getMissionItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.mavsdk.rpc.mission_raw.MissionItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRawResult mission_raw_result = 1;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.prototype.getMissionRawResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionRawResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionRawResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionRawResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.DownloadMissionResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.prototype.setMissionRawResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.DownloadMissionResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.prototype.clearMissionRawResult = function() {
  return this.setMissionRawResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.prototype.hasMissionRawResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated MissionItem mission_items = 2;
 * @return {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>}
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.prototype.getMissionItemsList = function() {
  return /** @type{!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionItem, 2));
};


/**
 * @param {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} value
 * @return {!proto.mavsdk.rpc.mission_raw.DownloadMissionResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.prototype.setMissionItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.mavsdk.rpc.mission_raw.MissionItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem}
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.prototype.addMissionItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mavsdk.rpc.mission_raw.MissionItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mavsdk.rpc.mission_raw.DownloadMissionResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.DownloadMissionResponse.prototype.clearMissionItemsList = function() {
  return this.setMissionItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest;
  return proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionRawResult: (f = msg.getMissionRawResult()) && proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse;
  return proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionRawResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader);
      msg.setMissionRawResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionRawResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRawResult mission_raw_result = 1;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.prototype.getMissionRawResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionRawResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionRawResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionRawResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.prototype.setMissionRawResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.prototype.clearMissionRawResult = function() {
  return this.setMissionRawResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.CancelMissionDownloadResponse.prototype.hasMissionRawResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.StartMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.StartMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.StartMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.StartMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.StartMissionRequest}
 */
proto.mavsdk.rpc.mission_raw.StartMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.StartMissionRequest;
  return proto.mavsdk.rpc.mission_raw.StartMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.StartMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.StartMissionRequest}
 */
proto.mavsdk.rpc.mission_raw.StartMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.StartMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.StartMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.StartMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.StartMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.StartMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.StartMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.StartMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.StartMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionRawResult: (f = msg.getMissionRawResult()) && proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.StartMissionResponse}
 */
proto.mavsdk.rpc.mission_raw.StartMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.StartMissionResponse;
  return proto.mavsdk.rpc.mission_raw.StartMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.StartMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.StartMissionResponse}
 */
proto.mavsdk.rpc.mission_raw.StartMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionRawResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader);
      msg.setMissionRawResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.StartMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.StartMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.StartMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.StartMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionRawResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRawResult mission_raw_result = 1;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.StartMissionResponse.prototype.getMissionRawResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionRawResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionRawResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionRawResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.StartMissionResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.StartMissionResponse.prototype.setMissionRawResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.StartMissionResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.StartMissionResponse.prototype.clearMissionRawResult = function() {
  return this.setMissionRawResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.StartMissionResponse.prototype.hasMissionRawResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.PauseMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.PauseMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.PauseMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.PauseMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.PauseMissionRequest}
 */
proto.mavsdk.rpc.mission_raw.PauseMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.PauseMissionRequest;
  return proto.mavsdk.rpc.mission_raw.PauseMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.PauseMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.PauseMissionRequest}
 */
proto.mavsdk.rpc.mission_raw.PauseMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.PauseMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.PauseMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.PauseMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.PauseMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.PauseMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.PauseMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.PauseMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.PauseMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionRawResult: (f = msg.getMissionRawResult()) && proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.PauseMissionResponse}
 */
proto.mavsdk.rpc.mission_raw.PauseMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.PauseMissionResponse;
  return proto.mavsdk.rpc.mission_raw.PauseMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.PauseMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.PauseMissionResponse}
 */
proto.mavsdk.rpc.mission_raw.PauseMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionRawResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader);
      msg.setMissionRawResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.PauseMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.PauseMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.PauseMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.PauseMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionRawResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRawResult mission_raw_result = 1;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.PauseMissionResponse.prototype.getMissionRawResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionRawResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionRawResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionRawResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.PauseMissionResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.PauseMissionResponse.prototype.setMissionRawResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.PauseMissionResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.PauseMissionResponse.prototype.clearMissionRawResult = function() {
  return this.setMissionRawResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.PauseMissionResponse.prototype.hasMissionRawResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.ClearMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.ClearMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.ClearMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.ClearMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.ClearMissionRequest}
 */
proto.mavsdk.rpc.mission_raw.ClearMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.ClearMissionRequest;
  return proto.mavsdk.rpc.mission_raw.ClearMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.ClearMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.ClearMissionRequest}
 */
proto.mavsdk.rpc.mission_raw.ClearMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.ClearMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.ClearMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.ClearMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.ClearMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.ClearMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.ClearMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.ClearMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.ClearMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionRawResult: (f = msg.getMissionRawResult()) && proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.ClearMissionResponse}
 */
proto.mavsdk.rpc.mission_raw.ClearMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.ClearMissionResponse;
  return proto.mavsdk.rpc.mission_raw.ClearMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.ClearMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.ClearMissionResponse}
 */
proto.mavsdk.rpc.mission_raw.ClearMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionRawResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader);
      msg.setMissionRawResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.ClearMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.ClearMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.ClearMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.ClearMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionRawResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRawResult mission_raw_result = 1;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.ClearMissionResponse.prototype.getMissionRawResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionRawResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionRawResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionRawResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.ClearMissionResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.ClearMissionResponse.prototype.setMissionRawResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.ClearMissionResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.ClearMissionResponse.prototype.clearMissionRawResult = function() {
  return this.setMissionRawResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.ClearMissionResponse.prototype.hasMissionRawResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest}
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest;
  return proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest}
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 index = 1;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest} returns this
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionRawResult: (f = msg.getMissionRawResult()) && proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse}
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse;
  return proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse}
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionRawResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader);
      msg.setMissionRawResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionRawResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRawResult mission_raw_result = 1;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.prototype.getMissionRawResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionRawResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionRawResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionRawResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.prototype.setMissionRawResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.prototype.clearMissionRawResult = function() {
  return this.setMissionRawResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse.prototype.hasMissionRawResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest}
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest;
  return proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest}
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.MissionProgressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.MissionProgressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.MissionProgressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.MissionProgressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionProgress: (f = msg.getMissionProgress()) && proto.mavsdk.rpc.mission_raw.MissionProgress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionProgressResponse}
 */
proto.mavsdk.rpc.mission_raw.MissionProgressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.MissionProgressResponse;
  return proto.mavsdk.rpc.mission_raw.MissionProgressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.MissionProgressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionProgressResponse}
 */
proto.mavsdk.rpc.mission_raw.MissionProgressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionProgress;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionProgress.deserializeBinaryFromReader);
      msg.setMissionProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.MissionProgressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.MissionProgressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.MissionProgressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.MissionProgressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionProgress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionProgress.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionProgress mission_progress = 1;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionProgress}
 */
proto.mavsdk.rpc.mission_raw.MissionProgressResponse.prototype.getMissionProgress = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionProgress} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionProgress, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionProgress|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionProgressResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.MissionProgressResponse.prototype.setMissionProgress = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionProgressResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionProgressResponse.prototype.clearMissionProgress = function() {
  return this.setMissionProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.MissionProgressResponse.prototype.hasMissionProgress = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest}
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest;
  return proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest}
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.MissionChangedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.MissionChangedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.MissionChangedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.MissionChangedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionChanged: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionChangedResponse}
 */
proto.mavsdk.rpc.mission_raw.MissionChangedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.MissionChangedResponse;
  return proto.mavsdk.rpc.mission_raw.MissionChangedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.MissionChangedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionChangedResponse}
 */
proto.mavsdk.rpc.mission_raw.MissionChangedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMissionChanged(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.MissionChangedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.MissionChangedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.MissionChangedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.MissionChangedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionChanged();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool mission_changed = 1;
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.MissionChangedResponse.prototype.getMissionChanged = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionChangedResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionChangedResponse.prototype.setMissionChanged = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    qgcPlanPath: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest;
  return proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQgcPlanPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQgcPlanPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string qgc_plan_path = 1;
 * @return {string}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest.prototype.getQgcPlanPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest} returns this
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionRequest.prototype.setQgcPlanPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionRawResult: (f = msg.getMissionRawResult()) && proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject(includeInstance, f),
    missionImportData: (f = msg.getMissionImportData()) && proto.mavsdk.rpc.mission_raw.MissionImportData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse;
  return proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionRawResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader);
      msg.setMissionRawResult(value);
      break;
    case 2:
      var value = new proto.mavsdk.rpc.mission_raw.MissionImportData;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionImportData.deserializeBinaryFromReader);
      msg.setMissionImportData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionRawResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter
    );
  }
  f = message.getMissionImportData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mavsdk.rpc.mission_raw.MissionImportData.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRawResult mission_raw_result = 1;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.prototype.getMissionRawResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionRawResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionRawResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionRawResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.prototype.setMissionRawResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.prototype.clearMissionRawResult = function() {
  return this.setMissionRawResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.prototype.hasMissionRawResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MissionImportData mission_import_data = 2;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionImportData}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.prototype.getMissionImportData = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionImportData} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionImportData, 2));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionImportData|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.prototype.setMissionImportData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.prototype.clearMissionImportData = function() {
  return this.setMissionImportData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionResponse.prototype.hasMissionImportData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    qgcPlan: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest;
  return proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQgcPlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQgcPlan();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string qgc_plan = 1;
 * @return {string}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest.prototype.getQgcPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest} returns this
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringRequest.prototype.setQgcPlan = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionRawResult: (f = msg.getMissionRawResult()) && proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject(includeInstance, f),
    missionImportData: (f = msg.getMissionImportData()) && proto.mavsdk.rpc.mission_raw.MissionImportData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse;
  return proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionRawResult;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader);
      msg.setMissionRawResult(value);
      break;
    case 2:
      var value = new proto.mavsdk.rpc.mission_raw.MissionImportData;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionImportData.deserializeBinaryFromReader);
      msg.setMissionImportData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionRawResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter
    );
  }
  f = message.getMissionImportData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mavsdk.rpc.mission_raw.MissionImportData.serializeBinaryToWriter
    );
  }
};


/**
 * optional MissionRawResult mission_raw_result = 1;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.prototype.getMissionRawResult = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionRawResult} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionRawResult, 1));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionRawResult|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.prototype.setMissionRawResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.prototype.clearMissionRawResult = function() {
  return this.setMissionRawResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.prototype.hasMissionRawResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MissionImportData mission_import_data = 2;
 * @return {?proto.mavsdk.rpc.mission_raw.MissionImportData}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.prototype.getMissionImportData = function() {
  return /** @type{?proto.mavsdk.rpc.mission_raw.MissionImportData} */ (
    jspb.Message.getWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionImportData, 2));
};


/**
 * @param {?proto.mavsdk.rpc.mission_raw.MissionImportData|undefined} value
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse} returns this
*/
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.prototype.setMissionImportData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse} returns this
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.prototype.clearMissionImportData = function() {
  return this.setMissionImportData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mavsdk.rpc.mission_raw.ImportQgroundcontrolMissionFromStringResponse.prototype.hasMissionImportData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.MissionProgress.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.MissionProgress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.MissionProgress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.MissionProgress.toObject = function(includeInstance, msg) {
  var f, obj = {
    current: jspb.Message.getFieldWithDefault(msg, 1, 0),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionProgress}
 */
proto.mavsdk.rpc.mission_raw.MissionProgress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.MissionProgress;
  return proto.mavsdk.rpc.mission_raw.MissionProgress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.MissionProgress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionProgress}
 */
proto.mavsdk.rpc.mission_raw.MissionProgress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.MissionProgress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.MissionProgress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.MissionProgress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.MissionProgress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrent();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 current = 1;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionProgress.prototype.getCurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionProgress} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionProgress.prototype.setCurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 total = 2;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionProgress.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionProgress} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionProgress.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.MissionItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.MissionItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.MissionItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    seq: jspb.Message.getFieldWithDefault(msg, 1, 0),
    frame: jspb.Message.getFieldWithDefault(msg, 2, 0),
    command: jspb.Message.getFieldWithDefault(msg, 3, 0),
    current: jspb.Message.getFieldWithDefault(msg, 4, 0),
    autocontinue: jspb.Message.getFieldWithDefault(msg, 5, 0),
    param1: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    param2: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    param3: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    param4: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    x: jspb.Message.getFieldWithDefault(msg, 10, 0),
    y: jspb.Message.getFieldWithDefault(msg, 11, 0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    missionType: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.MissionItem;
  return proto.mavsdk.rpc.mission_raw.MissionItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.MissionItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSeq(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFrame(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCommand(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrent(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAutocontinue(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setParam1(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setParam2(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setParam3(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setParam4(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMissionType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.MissionItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.MissionItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.MissionItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeq();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getFrame();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getCommand();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getCurrent();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getAutocontinue();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getParam1();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getParam2();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getParam3();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getParam4();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getMissionType();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
};


/**
 * optional uint32 seq = 1;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.getSeq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.setSeq = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 frame = 2;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.getFrame = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.setFrame = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 command = 3;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.getCommand = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.setCommand = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 current = 4;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.getCurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.setCurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 autocontinue = 5;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.getAutocontinue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.setAutocontinue = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional float param1 = 6;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.getParam1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.setParam1 = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float param2 = 7;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.getParam2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.setParam2 = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float param3 = 8;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.getParam3 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.setParam3 = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float param4 = 9;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.getParam4 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.setParam4 = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional int32 x = 10;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 y = 11;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional float z = 12;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional uint32 mission_type = 13;
 * @return {number}
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.getMissionType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionItem.prototype.setMissionType = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.MissionImportData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.MissionImportData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionItemsList: jspb.Message.toObjectList(msg.getMissionItemsList(),
    proto.mavsdk.rpc.mission_raw.MissionItem.toObject, includeInstance),
    geofenceItemsList: jspb.Message.toObjectList(msg.getGeofenceItemsList(),
    proto.mavsdk.rpc.mission_raw.MissionItem.toObject, includeInstance),
    rallyItemsList: jspb.Message.toObjectList(msg.getRallyItemsList(),
    proto.mavsdk.rpc.mission_raw.MissionItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionImportData}
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.MissionImportData;
  return proto.mavsdk.rpc.mission_raw.MissionImportData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.MissionImportData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionImportData}
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mavsdk.rpc.mission_raw.MissionItem;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionItem.deserializeBinaryFromReader);
      msg.addMissionItems(value);
      break;
    case 2:
      var value = new proto.mavsdk.rpc.mission_raw.MissionItem;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionItem.deserializeBinaryFromReader);
      msg.addGeofenceItems(value);
      break;
    case 3:
      var value = new proto.mavsdk.rpc.mission_raw.MissionItem;
      reader.readMessage(value,proto.mavsdk.rpc.mission_raw.MissionItem.deserializeBinaryFromReader);
      msg.addRallyItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.MissionImportData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.MissionImportData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mavsdk.rpc.mission_raw.MissionItem.serializeBinaryToWriter
    );
  }
  f = message.getGeofenceItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.mavsdk.rpc.mission_raw.MissionItem.serializeBinaryToWriter
    );
  }
  f = message.getRallyItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.mavsdk.rpc.mission_raw.MissionItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MissionItem mission_items = 1;
 * @return {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>}
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.getMissionItemsList = function() {
  return /** @type{!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionItem, 1));
};


/**
 * @param {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionImportData} returns this
*/
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.setMissionItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mavsdk.rpc.mission_raw.MissionItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem}
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.addMissionItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mavsdk.rpc.mission_raw.MissionItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionImportData} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.clearMissionItemsList = function() {
  return this.setMissionItemsList([]);
};


/**
 * repeated MissionItem geofence_items = 2;
 * @return {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>}
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.getGeofenceItemsList = function() {
  return /** @type{!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionItem, 2));
};


/**
 * @param {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionImportData} returns this
*/
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.setGeofenceItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.mavsdk.rpc.mission_raw.MissionItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem}
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.addGeofenceItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mavsdk.rpc.mission_raw.MissionItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionImportData} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.clearGeofenceItemsList = function() {
  return this.setGeofenceItemsList([]);
};


/**
 * repeated MissionItem rally_items = 3;
 * @return {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>}
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.getRallyItemsList = function() {
  return /** @type{!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mavsdk.rpc.mission_raw.MissionItem, 3));
};


/**
 * @param {!Array<!proto.mavsdk.rpc.mission_raw.MissionItem>} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionImportData} returns this
*/
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.setRallyItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.mavsdk.rpc.mission_raw.MissionItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mavsdk.rpc.mission_raw.MissionItem}
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.addRallyItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.mavsdk.rpc.mission_raw.MissionItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionImportData} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionImportData.prototype.clearRallyItemsList = function() {
  return this.setRallyItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mavsdk.rpc.mission_raw.MissionRawResult.prototype.toObject = function(opt_includeInstance) {
  return proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mavsdk.rpc.mission_raw.MissionRawResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.MissionRawResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0),
    resultStr: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mavsdk.rpc.mission_raw.MissionRawResult;
  return proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mavsdk.rpc.mission_raw.MissionRawResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mavsdk.rpc.mission_raw.MissionRawResult}
 */
proto.mavsdk.rpc.mission_raw.MissionRawResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mavsdk.rpc.mission_raw.MissionRawResult.Result} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mavsdk.rpc.mission_raw.MissionRawResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mavsdk.rpc.mission_raw.MissionRawResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mavsdk.rpc.mission_raw.MissionRawResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getResultStr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mavsdk.rpc.mission_raw.MissionRawResult.Result = {
  RESULT_UNKNOWN: 0,
  RESULT_SUCCESS: 1,
  RESULT_ERROR: 2,
  RESULT_TOO_MANY_MISSION_ITEMS: 3,
  RESULT_BUSY: 4,
  RESULT_TIMEOUT: 5,
  RESULT_INVALID_ARGUMENT: 6,
  RESULT_UNSUPPORTED: 7,
  RESULT_NO_MISSION_AVAILABLE: 8,
  RESULT_TRANSFER_CANCELLED: 9,
  RESULT_FAILED_TO_OPEN_QGC_PLAN: 10,
  RESULT_FAILED_TO_PARSE_QGC_PLAN: 11,
  RESULT_NO_SYSTEM: 12,
  RESULT_DENIED: 13,
  RESULT_MISSION_TYPE_NOT_CONSISTENT: 14,
  RESULT_INVALID_SEQUENCE: 15,
  RESULT_CURRENT_INVALID: 16,
  RESULT_PROTOCOL_ERROR: 17,
  RESULT_INT_MESSAGES_NOT_SUPPORTED: 18
};

/**
 * optional Result result = 1;
 * @return {!proto.mavsdk.rpc.mission_raw.MissionRawResult.Result}
 */
proto.mavsdk.rpc.mission_raw.MissionRawResult.prototype.getResult = function() {
  return /** @type {!proto.mavsdk.rpc.mission_raw.MissionRawResult.Result} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mavsdk.rpc.mission_raw.MissionRawResult.Result} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionRawResult} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionRawResult.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string result_str = 2;
 * @return {string}
 */
proto.mavsdk.rpc.mission_raw.MissionRawResult.prototype.getResultStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mavsdk.rpc.mission_raw.MissionRawResult} returns this
 */
proto.mavsdk.rpc.mission_raw.MissionRawResult.prototype.setResultStr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.mavsdk.rpc.mission_raw);


// fix autocompletion
module.exports = exports;
